(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendor"],{

/***/ "./node_modules/bootstrap.native/lib/V4/modal-native.js":
/*!**************************************************************!*\
  !*** ./node_modules/bootstrap.native/lib/V4/modal-native.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Native Javascript for Bootstrap 4 v2.0.27 | Â© dnp_theme | MIT-License\n(function (root, factory) {\n  if (true) {\n    // AMD support:\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var bsn; }\n}(this, function () {\n  \n  /* Native Javascript for Bootstrap 4 | Internal Utility Functions\n  ----------------------------------------------------------------*/\n  \"use strict\";\n  \n  // globals\n  var globalObject = typeof global !== 'undefined' ? global : this||window,\n    DOC = document, HTML = DOC.documentElement, body = 'body', // allow the library to be used in <head>\n  \n    // Native Javascript for Bootstrap Global Object\n    BSN = globalObject.BSN = {},\n    supports = BSN.supports = [],\n  \n    // function toggle attributes\n    dataToggle    = 'data-toggle',\n    dataDismiss   = 'data-dismiss',\n    dataSpy       = 'data-spy',\n    dataRide      = 'data-ride',\n  \n    // components\n    stringAlert     = 'Alert',\n    stringButton    = 'Button',\n    stringCarousel  = 'Carousel',\n    stringCollapse  = 'Collapse',\n    stringDropdown  = 'Dropdown',\n    stringModal     = 'Modal',\n    stringPopover   = 'Popover',\n    stringScrollSpy = 'ScrollSpy',\n    stringTab       = 'Tab',\n    stringTooltip   = 'Tooltip',\n    stringToast     = 'Toast',\n  \n    // options DATA API\n    dataAutohide      = 'data-autohide',\n    databackdrop      = 'data-backdrop',\n    dataKeyboard      = 'data-keyboard',\n    dataTarget        = 'data-target',\n    dataInterval      = 'data-interval',\n    dataHeight        = 'data-height',\n    dataPause         = 'data-pause',\n    dataTitle         = 'data-title',\n    dataOriginalTitle = 'data-original-title',\n    dataDismissible   = 'data-dismissible',\n    dataTrigger       = 'data-trigger',\n    dataAnimation     = 'data-animation',\n    dataContainer     = 'data-container',\n    dataPlacement     = 'data-placement',\n    dataDelay         = 'data-delay',\n  \n    // option keys\n    backdrop = 'backdrop', keyboard = 'keyboard', delay = 'delay',\n    content = 'content', target = 'target', currentTarget = 'currentTarget',\n    interval = 'interval', pause = 'pause', animation = 'animation',\n    placement = 'placement', container = 'container',\n  \n    // box model\n    offsetTop    = 'offsetTop',      offsetBottom   = 'offsetBottom',\n    offsetLeft   = 'offsetLeft',\n    scrollTop    = 'scrollTop',      scrollLeft     = 'scrollLeft',\n    clientWidth  = 'clientWidth',    clientHeight   = 'clientHeight',\n    offsetWidth  = 'offsetWidth',    offsetHeight   = 'offsetHeight',\n    innerWidth   = 'innerWidth',     innerHeight    = 'innerHeight',\n    scrollHeight = 'scrollHeight',   scrollWidth    = 'scrollWidth',\n    height         = 'height',\n  \n    // aria\n    ariaExpanded = 'aria-expanded',\n    ariaHidden   = 'aria-hidden',\n    ariaSelected = 'aria-selected',\n  \n    // event names\n    clickEvent    = 'click',\n    focusEvent    = 'focus',\n    hoverEvent    = 'hover',\n    keydownEvent  = 'keydown',\n    keyupEvent    = 'keyup',\n    resizeEvent   = 'resize', // passive\n    scrollEvent   = 'scroll', // passive\n    mouseHover = ('onmouseleave' in DOC) ? [ 'mouseenter', 'mouseleave'] : [ 'mouseover', 'mouseout' ],\n    // touch since 2.0.26\n    touchEvents = { start: 'touchstart', end: 'touchend', move:'touchmove' }, // passive\n    // originalEvents\n    showEvent     = 'show',\n    shownEvent    = 'shown',\n    hideEvent     = 'hide',\n    hiddenEvent   = 'hidden',\n    closeEvent    = 'close',\n    closedEvent   = 'closed',\n    slidEvent     = 'slid',\n    slideEvent    = 'slide',\n    changeEvent   = 'change',\n  \n    // other\n    getAttribute           = 'getAttribute',\n    setAttribute           = 'setAttribute',\n    hasAttribute           = 'hasAttribute',\n    createElement          = 'createElement',\n    appendChild            = 'appendChild',\n    innerHTML              = 'innerHTML',\n    getElementsByTagName   = 'getElementsByTagName',\n    preventDefault         = 'preventDefault',\n    getBoundingClientRect  = 'getBoundingClientRect',\n    querySelectorAll       = 'querySelectorAll',\n    getElementsByCLASSNAME = 'getElementsByClassName',\n    getComputedStyle       = 'getComputedStyle',  \n  \n    indexOf      = 'indexOf',\n    parentNode   = 'parentNode',\n    length       = 'length',\n    toLowerCase  = 'toLowerCase',\n    Transition   = 'Transition',\n    Duration     = 'Duration',\n    Webkit       = 'Webkit',\n    style        = 'style',\n    push         = 'push',\n    tabindex     = 'tabindex',\n    contains     = 'contains',\n  \n    active     = 'active',\n    showClass  = 'show',\n    collapsing = 'collapsing',\n    disabled   = 'disabled',\n    loading    = 'loading',\n    left       = 'left',\n    right      = 'right',\n    top        = 'top',\n    bottom     = 'bottom',\n  \n    // tooltip / popover\n    tipPositions = /\\b(top|bottom|left|right)+/,\n  \n    // modal\n    modalOverlay = 0,\n    fixedTop = 'fixed-top',\n    fixedBottom = 'fixed-bottom',\n  \n    // transitionEnd since 2.0.4\n    supportTransitions = Webkit+Transition in HTML[style] || Transition[toLowerCase]() in HTML[style],\n    transitionEndEvent = Webkit+Transition in HTML[style] ? Webkit[toLowerCase]()+Transition+'End' : Transition[toLowerCase]()+'end',\n    transitionDuration = Webkit+Duration in HTML[style] ? Webkit[toLowerCase]()+Transition+Duration : Transition[toLowerCase]()+Duration,\n  \n    // set new focus element since 2.0.3\n    setFocus = function(element){\n      element.focus ? element.focus() : element.setActive();\n    },\n  \n    // class manipulation, since 2.0.0 requires polyfill.js\n    addClass = function(element,classNAME) {\n      element.classList.add(classNAME);\n    },\n    removeClass = function(element,classNAME) {\n      element.classList.remove(classNAME);\n    },\n    hasClass = function(element,classNAME){ // since 2.0.0\n      return element.classList[contains](classNAME);\n    },\n  \n    // selection methods\n    getElementsByClassName = function(element,classNAME) { // returns Array\n      return [].slice.call(element[getElementsByCLASSNAME]( classNAME ));\n    },\n    queryElement = function (selector, parent) {\n      var lookUp = parent ? parent : DOC;\n      return typeof selector === 'object' ? selector : lookUp.querySelector(selector);\n    },\n    getClosest = function (element, selector) { //element is the element and selector is for the closest parent element to find\n      // source http://gomakethings.com/climbing-up-and-down-the-dom-tree-with-vanilla-javascript/\n      var firstChar = selector.charAt(0), selectorSubstring = selector.substr(1);\n      if ( firstChar === '.' ) {// If selector is a class\n        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match\n          if ( queryElement(selector,element[parentNode]) !== null && hasClass(element,selectorSubstring) ) { return element; }\n        }\n      } else if ( firstChar === '#' ) { // If selector is an ID\n        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match\n          if ( element.id === selectorSubstring ) { return element; }\n        }\n      }\n      return false;\n    },\n  \n    // event attach jQuery style / trigger  since 1.2.0\n    on = function (element, event, handler, options) {\n      options = options || false;\n      element.addEventListener(event, handler, options);\n    },\n    off = function(element, event, handler, options) {\n      options = options || false;\n      element.removeEventListener(event, handler, options);\n    },\n    one = function (element, event, handler, options) { // one since 2.0.4\n      on(element, event, function handlerWrapper(e){\n        handler(e);\n        off(element, event, handlerWrapper, options);\n      }, options);\n    },\n    // determine support for passive events\n    supportPassive = (function(){\n      // Test via a getter in the options object to see if the passive property is accessed\n      var result = false;\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function() {\n            result = true;\n          }\n        });\n        one(globalObject, 'testPassive', null, opts);\n      } catch (e) {}\n  \n      return result;\n    }()),\n    // event options\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n    passiveHandler = supportPassive ? { passive: true } : false,\n    // transitions\n    getTransitionDurationFromElement = function(element) {\n      var duration = supportTransitions ? globalObject[getComputedStyle](element)[transitionDuration] : 0;\n      duration = parseFloat(duration);\n      duration = typeof duration === 'number' && !isNaN(duration) ? duration * 1000 : 0;\n      return duration; // we take a short offset to make sure we fire on the next frame after animation\n    },\n    emulateTransitionEnd = function(element,handler){ // emulateTransitionEnd since 2.0.4\n      var called = 0, duration = getTransitionDurationFromElement(element);\n      duration ? one(element, transitionEndEvent, function(e){ !called && handler(e), called = 1; })\n               : setTimeout(function() { !called && handler(), called = 1; }, 17);\n    },\n    bootstrapCustomEvent = function (eventName, componentName, related) {\n      var OriginalCustomEvent = new CustomEvent( eventName + '.bs.' + componentName);\n      OriginalCustomEvent.relatedTarget = related;\n      this.dispatchEvent(OriginalCustomEvent);\n    },\n  \n    // tooltip / popover stuff\n    getScroll = function() { // also Affix and ScrollSpy uses it\n      return {\n        y : globalObject.pageYOffset || HTML[scrollTop],\n        x : globalObject.pageXOffset || HTML[scrollLeft]\n      }\n    },\n    styleTip = function(link,element,position,parent) { // both popovers and tooltips (target,tooltip,placement,elementToAppendTo)\n      var elementDimensions = { w : element[offsetWidth], h: element[offsetHeight] },\n          windowWidth = (HTML[clientWidth] || DOC[body][clientWidth]),\n          windowHeight = (HTML[clientHeight] || DOC[body][clientHeight]),\n          rect = link[getBoundingClientRect](),\n          scroll = parent === DOC[body] ? getScroll() : { x: parent[offsetLeft] + parent[scrollLeft], y: parent[offsetTop] + parent[scrollTop] },\n          linkDimensions = { w: rect[right] - rect[left], h: rect[bottom] - rect[top] },\n          isPopover = hasClass(element,'popover'),\n          topPosition, leftPosition,\n  \n          arrow = queryElement('.arrow',element),\n          arrowTop, arrowLeft, arrowWidth, arrowHeight,\n  \n          halfTopExceed = rect[top] + linkDimensions.h/2 - elementDimensions.h/2 < 0,\n          halfLeftExceed = rect[left] + linkDimensions.w/2 - elementDimensions.w/2 < 0,\n          halfRightExceed = rect[left] + elementDimensions.w/2 + linkDimensions.w/2 >= windowWidth,\n          halfBottomExceed = rect[top] + elementDimensions.h/2 + linkDimensions.h/2 >= windowHeight,\n          topExceed = rect[top] - elementDimensions.h < 0,\n          leftExceed = rect[left] - elementDimensions.w < 0,\n          bottomExceed = rect[top] + elementDimensions.h + linkDimensions.h >= windowHeight,\n          rightExceed = rect[left] + elementDimensions.w + linkDimensions.w >= windowWidth;\n  \n      // recompute position\n      position = (position === left || position === right) && leftExceed && rightExceed ? top : position; // first, when both left and right limits are exceeded, we fall back to top|bottom\n      position = position === top && topExceed ? bottom : position;\n      position = position === bottom && bottomExceed ? top : position;\n      position = position === left && leftExceed ? right : position;\n      position = position === right && rightExceed ? left : position;\n  \n      // update tooltip/popover class\n      element.className[indexOf](position) === -1 && (element.className = element.className.replace(tipPositions,position));\n  \n      // we check the computed width & height and update here\n      arrowWidth = arrow[offsetWidth]; arrowHeight = arrow[offsetHeight];\n  \n      // apply styling to tooltip or popover\n      if ( position === left || position === right ) { // secondary|side positions\n        if ( position === left ) { // LEFT\n          leftPosition = rect[left] + scroll.x - elementDimensions.w - ( isPopover ? arrowWidth : 0 );\n        } else { // RIGHT\n          leftPosition = rect[left] + scroll.x + linkDimensions.w;\n        }\n  \n        // adjust top and arrow\n        if (halfTopExceed) {\n          topPosition = rect[top] + scroll.y;\n          arrowTop = linkDimensions.h/2 - arrowWidth;\n        } else if (halfBottomExceed) {\n          topPosition = rect[top] + scroll.y - elementDimensions.h + linkDimensions.h;\n          arrowTop = elementDimensions.h - linkDimensions.h/2 - arrowWidth;\n        } else {\n          topPosition = rect[top] + scroll.y - elementDimensions.h/2 + linkDimensions.h/2;\n          arrowTop = elementDimensions.h/2 - (isPopover ? arrowHeight*0.9 : arrowHeight/2);\n        }\n      } else if ( position === top || position === bottom ) { // primary|vertical positions\n        if ( position === top) { // TOP\n          topPosition =  rect[top] + scroll.y - elementDimensions.h - ( isPopover ? arrowHeight : 0 );\n        } else { // BOTTOM\n          topPosition = rect[top] + scroll.y + linkDimensions.h;\n        }\n        // adjust left | right and also the arrow\n        if (halfLeftExceed) {\n          leftPosition = 0;\n          arrowLeft = rect[left] + linkDimensions.w/2 - arrowWidth;\n        } else if (halfRightExceed) {\n          leftPosition = windowWidth - elementDimensions.w*1.01;\n          arrowLeft = elementDimensions.w - ( windowWidth - rect[left] ) + linkDimensions.w/2 - arrowWidth/2;\n        } else {\n          leftPosition = rect[left] + scroll.x - elementDimensions.w/2 + linkDimensions.w/2;\n          arrowLeft = elementDimensions.w/2 - ( isPopover ? arrowWidth : arrowWidth/2 );\n        }\n      }\n  \n      // apply style to tooltip/popover and its arrow\n      element[style][top] = topPosition + 'px';\n      element[style][left] = leftPosition + 'px';\n  \n      arrowTop && (arrow[style][top] = arrowTop + 'px');\n      arrowLeft && (arrow[style][left] = arrowLeft + 'px');\n    };\n  \n  BSN.version = '2.0.27';\n  \n  /* Native Javascript for Bootstrap 4 | Modal\n  -------------------------------------------*/\n  \n  // MODAL DEFINITION\n  // ===============\n  var Modal = function(element, options) { // element can be the modal/triggering button\n  \n    // the modal (both JavaScript / DATA API init) / triggering button element (DATA API)\n    element = queryElement(element);\n  \n      // strings\n      var component = 'modal',\n        staticString = 'static',\n        modalTrigger = 'modalTrigger',\n        paddingRight = 'paddingRight',\n        modalBackdropString = 'modal-backdrop',\n        isAnimating = 'isAnimating',\n        // determine modal, triggering element\n        btnCheck = element[getAttribute](dataTarget)||element[getAttribute]('href'),\n        checkModal = queryElement( btnCheck ),\n        modal = hasClass(element,component) ? element : checkModal;\n  \n      if ( hasClass(element, component) ) { element = null; } // modal is now independent of it's triggering element\n  \n    if ( !modal ) { return; } // invalidate\n  \n    // set options\n    options = options || {};\n  \n    this[keyboard] = options[keyboard] === false || modal[getAttribute](dataKeyboard) === 'false' ? false : true;\n    this[backdrop] = options[backdrop] === staticString || modal[getAttribute](databackdrop) === staticString ? staticString : true;\n    this[backdrop] = options[backdrop] === false || modal[getAttribute](databackdrop) === 'false' ? false : this[backdrop];\n    this[animation] = hasClass(modal, 'fade') ? true : false;\n    this[content]  = options[content]; // JavaScript only\n  \n    // set an initial state of the modal\n    modal[isAnimating] = false;\n    \n    // bind, constants, event targets and other vars\n    var self = this, relatedTarget = null,\n      bodyIsOverflowing, scrollBarWidth, overlay, overlayDelay, modalTimer,\n  \n      // also find fixed-top / fixed-bottom items\n      fixedItems = getElementsByClassName(HTML,fixedTop).concat(getElementsByClassName(HTML,fixedBottom)),\n  \n      // private methods\n      getWindowWidth = function() {\n        var htmlRect = HTML[getBoundingClientRect]();\n        return globalObject[innerWidth] || (htmlRect[right] - Math.abs(htmlRect[left]));\n      },\n      setScrollbar = function () {\n        var bodyStyle = globalObject[getComputedStyle](DOC[body]),\n            bodyPad = parseInt((bodyStyle[paddingRight]), 10), itemPad;\n        if (bodyIsOverflowing) {\n          DOC[body][style][paddingRight] = (bodyPad + scrollBarWidth) + 'px';\n          modal[style][paddingRight] = scrollBarWidth+'px';\n          if (fixedItems[length]){\n            for (var i = 0; i < fixedItems[length]; i++) {\n              itemPad = globalObject[getComputedStyle](fixedItems[i])[paddingRight];\n              fixedItems[i][style][paddingRight] = ( parseInt(itemPad) + scrollBarWidth) + 'px';\n            }\n          }\n        }\n      },\n      resetScrollbar = function () {\n        DOC[body][style][paddingRight] = '';\n        modal[style][paddingRight] = '';\n        if (fixedItems[length]){\n          for (var i = 0; i < fixedItems[length]; i++) {\n            fixedItems[i][style][paddingRight] = '';\n          }\n        }\n      },\n      measureScrollbar = function () { // thx walsh\n        var scrollDiv = DOC[createElement]('div'), widthValue;\n        scrollDiv.className = component+'-scrollbar-measure'; // this is here to stay\n        DOC[body][appendChild](scrollDiv);\n        widthValue = scrollDiv[offsetWidth] - scrollDiv[clientWidth];\n        DOC[body].removeChild(scrollDiv);\n        return widthValue;\n      },\n      checkScrollbar = function () {\n        bodyIsOverflowing = DOC[body][clientWidth] < getWindowWidth();\n        scrollBarWidth = measureScrollbar();\n      },\n      createOverlay = function() {\n        var newOverlay = DOC[createElement]('div');\n        overlay = queryElement('.'+modalBackdropString);\n  \n        if ( overlay === null ) {\n          newOverlay[setAttribute]('class', modalBackdropString + (self[animation] ? ' fade' : ''));\n          overlay = newOverlay;\n          DOC[body][appendChild](overlay);\n        }\n        modalOverlay = 1;\n      },\n      removeOverlay = function() {\n        overlay = queryElement('.'+modalBackdropString);\n        if ( overlay && overlay !== null && typeof overlay === 'object' ) {\n          modalOverlay = 0;\n          DOC[body].removeChild(overlay); overlay = null;\n        }\n      },\n      // triggers\n      triggerShow = function() {\n        setFocus(modal);\n        modal[isAnimating] = false;\n        bootstrapCustomEvent.call(modal, shownEvent, component, relatedTarget);\n  \n        on(globalObject, resizeEvent, self.update, passiveHandler);\n        on(modal, clickEvent, dismissHandler);\n        on(DOC, keydownEvent, keyHandler);      \n      },\n      triggerHide = function() {\n        modal[style].display = '';\n        element && (setFocus(element));\n        bootstrapCustomEvent.call(modal, hiddenEvent, component);\n  \n        (function(){\n          if (!getElementsByClassName(DOC,component+' '+showClass)[0]) {\n            resetScrollbar();\n            removeClass(DOC[body],component+'-open');\n            overlay && hasClass(overlay,'fade') ? (removeClass(overlay,showClass), emulateTransitionEnd(overlay,removeOverlay))\n            : removeOverlay();\n  \n            off(globalObject, resizeEvent, self.update, passiveHandler);\n            off(modal, clickEvent, dismissHandler);\n            off(DOC, keydownEvent, keyHandler);\n          }\n        }());\n        modal[isAnimating] = false;\n      },\n      // handlers\n      clickHandler = function(e) {\n        if ( modal[isAnimating] ) return;\n  \n        var clickTarget = e[target];\n        clickTarget = clickTarget[hasAttribute](dataTarget) || clickTarget[hasAttribute]('href') ? clickTarget : clickTarget[parentNode];\n        if ( clickTarget === element && !hasClass(modal,showClass) ) {\n          modal[modalTrigger] = element;\n          relatedTarget = element;\n          self.show();\n          e[preventDefault]();\n        }\n      },\n      keyHandler = function(e) {\n        if ( modal[isAnimating] ) return;\n  \n        if (self[keyboard] && e.which == 27 && hasClass(modal,showClass) ) {\n          self.hide();\n        }\n      },\n      dismissHandler = function(e) {\n        if ( modal[isAnimating] ) return;\n        var clickTarget = e[target];\n  \n        if ( hasClass(modal,showClass) && ( clickTarget[parentNode][getAttribute](dataDismiss) === component\n            || clickTarget[getAttribute](dataDismiss) === component\n            || clickTarget === modal && self[backdrop] !== staticString ) ) {\n          self.hide(); relatedTarget = null;\n          e[preventDefault]();\n        }\n      };\n  \n    // public methods\n    this.toggle = function() {\n      if ( hasClass(modal,showClass) ) {this.hide();} else {this.show();}\n    };\n    this.show = function() {\n      if ( hasClass(modal,showClass) || modal[isAnimating] ) {return}\n  \n      clearTimeout(modalTimer);\n      modalTimer = setTimeout(function(){\n        modal[isAnimating] = true;\n        bootstrapCustomEvent.call(modal, showEvent, component, relatedTarget);\n  \n        // we elegantly hide any opened modal\n        var currentOpen = getElementsByClassName(DOC,component+' '+showClass)[0];\n        if (currentOpen && currentOpen !== modal) {\n          modalTrigger in currentOpen && currentOpen[modalTrigger][stringModal].hide();\n          stringModal in currentOpen && currentOpen[stringModal].hide();\n        }\n  \n        if ( self[backdrop] ) {\n          !modalOverlay && !overlay && createOverlay();\n        }\n  \n        if ( overlay && !hasClass(overlay,showClass) ) {\n          overlay[offsetWidth]; // force reflow to enable trasition\n          overlayDelay = getTransitionDurationFromElement(overlay);\n          addClass(overlay, showClass);\n        }\n  \n        setTimeout( function() {\n          modal[style].display = 'block';\n  \n          checkScrollbar();\n          setScrollbar();\n  \n          addClass(DOC[body],component+'-open');\n          addClass(modal,showClass);\n          modal[setAttribute](ariaHidden, false);\n  \n          hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerShow) : triggerShow();\n        }, supportTransitions && overlay && overlayDelay ? overlayDelay : 1);\n      },1);\n    };\n    this.hide = function() {\n      if ( modal[isAnimating] || !hasClass(modal,showClass) ) {return}\n  \n      clearTimeout(modalTimer);\n      modalTimer = setTimeout(function(){\n        modal[isAnimating] = true;    \n        bootstrapCustomEvent.call(modal, hideEvent, component);\n        overlay = queryElement('.'+modalBackdropString);\n        overlayDelay = overlay && getTransitionDurationFromElement(overlay);\n  \n        removeClass(modal,showClass);\n        modal[setAttribute](ariaHidden, true);\n  \n        setTimeout(function(){\n          hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerHide) : triggerHide();\n        }, supportTransitions && overlay && overlayDelay ? overlayDelay : 2);\n      },2)\n    };\n    this.setContent = function( content ) {\n      queryElement('.'+component+'-content',modal)[innerHTML] = content;\n    };\n    this.update = function() {\n      if (hasClass(modal,showClass)) {\n        checkScrollbar();\n        setScrollbar();\n      }\n    };\n  \n    // init\n    // prevent adding event handlers over and over\n    // modal is independent of a triggering element\n    if ( !!element && !(stringModal in element) ) {\n      on(element, clickEvent, clickHandler);\n    }\n    if ( !!self[content] ) { self.setContent( self[content] ); }\n    if (element) { element[stringModal] = self; modal[modalTrigger] = element; }\n    else { modal[stringModal] = self; }\n  };\n  \n  // DATA API\n  supports[push]( [ stringModal, Modal, '['+dataToggle+'=\"modal\"]' ] );\n  \n  \r\n  /* Native Javascript for Bootstrap | Initialize Data API\r\n  --------------------------------------------------------*/\r\n  var initializeDataAPI = function( constructor, collection ){\r\n      for (var i=0, l=collection[length]; i<l; i++) {\r\n        new constructor(collection[i]);\r\n      }\r\n    },\r\n    initCallback = BSN.initCallback = function(lookUp){\r\n      lookUp = lookUp || DOC;\r\n      for (var i=0, l=supports[length]; i<l; i++) {\r\n        initializeDataAPI( supports[i][1], lookUp[querySelectorAll] (supports[i][2]) );\r\n      }\r\n    };\r\n  \r\n  // bulk initialize all components\r\n  DOC[body] ? initCallback() : on( DOC, 'DOMContentLoaded', function(){ initCallback(); } );\r\n  \n  return {\n    Modal: Modal\n  };\n}));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwLm5hdGl2ZS9saWIvVjQvbW9kYWwtbmF0aXZlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC5uYXRpdmUvbGliL1Y0L21vZGFsLW5hdGl2ZS5qcz80Mzk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIE5hdGl2ZSBKYXZhc2NyaXB0IGZvciBCb290c3RyYXAgNCB2Mi4wLjI3IHwgwqkgZG5wX3RoZW1lIHwgTUlULUxpY2Vuc2VcbihmdW5jdGlvbiAocm9vdCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgLy8gQU1EIHN1cHBvcnQ6XG4gICAgZGVmaW5lKFtdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgIC8vIENvbW1vbkpTLWxpa2U6XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gQnJvd3NlciBnbG9iYWxzIChyb290IGlzIHdpbmRvdylcbiAgICB2YXIgYnNuID0gZmFjdG9yeSgpO1xuICAgIHJvb3QuTW9kYWwgPSBic24uTW9kYWw7XG4gIH1cbn0odGhpcywgZnVuY3Rpb24gKCkge1xuICBcbiAgLyogTmF0aXZlIEphdmFzY3JpcHQgZm9yIEJvb3RzdHJhcCA0IHwgSW50ZXJuYWwgVXRpbGl0eSBGdW5jdGlvbnNcbiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4gIFwidXNlIHN0cmljdFwiO1xuICBcbiAgLy8gZ2xvYmFsc1xuICB2YXIgZ2xvYmFsT2JqZWN0ID0gdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB0aGlzfHx3aW5kb3csXG4gICAgRE9DID0gZG9jdW1lbnQsIEhUTUwgPSBET0MuZG9jdW1lbnRFbGVtZW50LCBib2R5ID0gJ2JvZHknLCAvLyBhbGxvdyB0aGUgbGlicmFyeSB0byBiZSB1c2VkIGluIDxoZWFkPlxuICBcbiAgICAvLyBOYXRpdmUgSmF2YXNjcmlwdCBmb3IgQm9vdHN0cmFwIEdsb2JhbCBPYmplY3RcbiAgICBCU04gPSBnbG9iYWxPYmplY3QuQlNOID0ge30sXG4gICAgc3VwcG9ydHMgPSBCU04uc3VwcG9ydHMgPSBbXSxcbiAgXG4gICAgLy8gZnVuY3Rpb24gdG9nZ2xlIGF0dHJpYnV0ZXNcbiAgICBkYXRhVG9nZ2xlICAgID0gJ2RhdGEtdG9nZ2xlJyxcbiAgICBkYXRhRGlzbWlzcyAgID0gJ2RhdGEtZGlzbWlzcycsXG4gICAgZGF0YVNweSAgICAgICA9ICdkYXRhLXNweScsXG4gICAgZGF0YVJpZGUgICAgICA9ICdkYXRhLXJpZGUnLFxuICBcbiAgICAvLyBjb21wb25lbnRzXG4gICAgc3RyaW5nQWxlcnQgICAgID0gJ0FsZXJ0JyxcbiAgICBzdHJpbmdCdXR0b24gICAgPSAnQnV0dG9uJyxcbiAgICBzdHJpbmdDYXJvdXNlbCAgPSAnQ2Fyb3VzZWwnLFxuICAgIHN0cmluZ0NvbGxhcHNlICA9ICdDb2xsYXBzZScsXG4gICAgc3RyaW5nRHJvcGRvd24gID0gJ0Ryb3Bkb3duJyxcbiAgICBzdHJpbmdNb2RhbCAgICAgPSAnTW9kYWwnLFxuICAgIHN0cmluZ1BvcG92ZXIgICA9ICdQb3BvdmVyJyxcbiAgICBzdHJpbmdTY3JvbGxTcHkgPSAnU2Nyb2xsU3B5JyxcbiAgICBzdHJpbmdUYWIgICAgICAgPSAnVGFiJyxcbiAgICBzdHJpbmdUb29sdGlwICAgPSAnVG9vbHRpcCcsXG4gICAgc3RyaW5nVG9hc3QgICAgID0gJ1RvYXN0JyxcbiAgXG4gICAgLy8gb3B0aW9ucyBEQVRBIEFQSVxuICAgIGRhdGFBdXRvaGlkZSAgICAgID0gJ2RhdGEtYXV0b2hpZGUnLFxuICAgIGRhdGFiYWNrZHJvcCAgICAgID0gJ2RhdGEtYmFja2Ryb3AnLFxuICAgIGRhdGFLZXlib2FyZCAgICAgID0gJ2RhdGEta2V5Ym9hcmQnLFxuICAgIGRhdGFUYXJnZXQgICAgICAgID0gJ2RhdGEtdGFyZ2V0JyxcbiAgICBkYXRhSW50ZXJ2YWwgICAgICA9ICdkYXRhLWludGVydmFsJyxcbiAgICBkYXRhSGVpZ2h0ICAgICAgICA9ICdkYXRhLWhlaWdodCcsXG4gICAgZGF0YVBhdXNlICAgICAgICAgPSAnZGF0YS1wYXVzZScsXG4gICAgZGF0YVRpdGxlICAgICAgICAgPSAnZGF0YS10aXRsZScsXG4gICAgZGF0YU9yaWdpbmFsVGl0bGUgPSAnZGF0YS1vcmlnaW5hbC10aXRsZScsXG4gICAgZGF0YURpc21pc3NpYmxlICAgPSAnZGF0YS1kaXNtaXNzaWJsZScsXG4gICAgZGF0YVRyaWdnZXIgICAgICAgPSAnZGF0YS10cmlnZ2VyJyxcbiAgICBkYXRhQW5pbWF0aW9uICAgICA9ICdkYXRhLWFuaW1hdGlvbicsXG4gICAgZGF0YUNvbnRhaW5lciAgICAgPSAnZGF0YS1jb250YWluZXInLFxuICAgIGRhdGFQbGFjZW1lbnQgICAgID0gJ2RhdGEtcGxhY2VtZW50JyxcbiAgICBkYXRhRGVsYXkgICAgICAgICA9ICdkYXRhLWRlbGF5JyxcbiAgXG4gICAgLy8gb3B0aW9uIGtleXNcbiAgICBiYWNrZHJvcCA9ICdiYWNrZHJvcCcsIGtleWJvYXJkID0gJ2tleWJvYXJkJywgZGVsYXkgPSAnZGVsYXknLFxuICAgIGNvbnRlbnQgPSAnY29udGVudCcsIHRhcmdldCA9ICd0YXJnZXQnLCBjdXJyZW50VGFyZ2V0ID0gJ2N1cnJlbnRUYXJnZXQnLFxuICAgIGludGVydmFsID0gJ2ludGVydmFsJywgcGF1c2UgPSAncGF1c2UnLCBhbmltYXRpb24gPSAnYW5pbWF0aW9uJyxcbiAgICBwbGFjZW1lbnQgPSAncGxhY2VtZW50JywgY29udGFpbmVyID0gJ2NvbnRhaW5lcicsXG4gIFxuICAgIC8vIGJveCBtb2RlbFxuICAgIG9mZnNldFRvcCAgICA9ICdvZmZzZXRUb3AnLCAgICAgIG9mZnNldEJvdHRvbSAgID0gJ29mZnNldEJvdHRvbScsXG4gICAgb2Zmc2V0TGVmdCAgID0gJ29mZnNldExlZnQnLFxuICAgIHNjcm9sbFRvcCAgICA9ICdzY3JvbGxUb3AnLCAgICAgIHNjcm9sbExlZnQgICAgID0gJ3Njcm9sbExlZnQnLFxuICAgIGNsaWVudFdpZHRoICA9ICdjbGllbnRXaWR0aCcsICAgIGNsaWVudEhlaWdodCAgID0gJ2NsaWVudEhlaWdodCcsXG4gICAgb2Zmc2V0V2lkdGggID0gJ29mZnNldFdpZHRoJywgICAgb2Zmc2V0SGVpZ2h0ICAgPSAnb2Zmc2V0SGVpZ2h0JyxcbiAgICBpbm5lcldpZHRoICAgPSAnaW5uZXJXaWR0aCcsICAgICBpbm5lckhlaWdodCAgICA9ICdpbm5lckhlaWdodCcsXG4gICAgc2Nyb2xsSGVpZ2h0ID0gJ3Njcm9sbEhlaWdodCcsICAgc2Nyb2xsV2lkdGggICAgPSAnc2Nyb2xsV2lkdGgnLFxuICAgIGhlaWdodCAgICAgICAgID0gJ2hlaWdodCcsXG4gIFxuICAgIC8vIGFyaWFcbiAgICBhcmlhRXhwYW5kZWQgPSAnYXJpYS1leHBhbmRlZCcsXG4gICAgYXJpYUhpZGRlbiAgID0gJ2FyaWEtaGlkZGVuJyxcbiAgICBhcmlhU2VsZWN0ZWQgPSAnYXJpYS1zZWxlY3RlZCcsXG4gIFxuICAgIC8vIGV2ZW50IG5hbWVzXG4gICAgY2xpY2tFdmVudCAgICA9ICdjbGljaycsXG4gICAgZm9jdXNFdmVudCAgICA9ICdmb2N1cycsXG4gICAgaG92ZXJFdmVudCAgICA9ICdob3ZlcicsXG4gICAga2V5ZG93bkV2ZW50ICA9ICdrZXlkb3duJyxcbiAgICBrZXl1cEV2ZW50ICAgID0gJ2tleXVwJyxcbiAgICByZXNpemVFdmVudCAgID0gJ3Jlc2l6ZScsIC8vIHBhc3NpdmVcbiAgICBzY3JvbGxFdmVudCAgID0gJ3Njcm9sbCcsIC8vIHBhc3NpdmVcbiAgICBtb3VzZUhvdmVyID0gKCdvbm1vdXNlbGVhdmUnIGluIERPQykgPyBbICdtb3VzZWVudGVyJywgJ21vdXNlbGVhdmUnXSA6IFsgJ21vdXNlb3ZlcicsICdtb3VzZW91dCcgXSxcbiAgICAvLyB0b3VjaCBzaW5jZSAyLjAuMjZcbiAgICB0b3VjaEV2ZW50cyA9IHsgc3RhcnQ6ICd0b3VjaHN0YXJ0JywgZW5kOiAndG91Y2hlbmQnLCBtb3ZlOid0b3VjaG1vdmUnIH0sIC8vIHBhc3NpdmVcbiAgICAvLyBvcmlnaW5hbEV2ZW50c1xuICAgIHNob3dFdmVudCAgICAgPSAnc2hvdycsXG4gICAgc2hvd25FdmVudCAgICA9ICdzaG93bicsXG4gICAgaGlkZUV2ZW50ICAgICA9ICdoaWRlJyxcbiAgICBoaWRkZW5FdmVudCAgID0gJ2hpZGRlbicsXG4gICAgY2xvc2VFdmVudCAgICA9ICdjbG9zZScsXG4gICAgY2xvc2VkRXZlbnQgICA9ICdjbG9zZWQnLFxuICAgIHNsaWRFdmVudCAgICAgPSAnc2xpZCcsXG4gICAgc2xpZGVFdmVudCAgICA9ICdzbGlkZScsXG4gICAgY2hhbmdlRXZlbnQgICA9ICdjaGFuZ2UnLFxuICBcbiAgICAvLyBvdGhlclxuICAgIGdldEF0dHJpYnV0ZSAgICAgICAgICAgPSAnZ2V0QXR0cmlidXRlJyxcbiAgICBzZXRBdHRyaWJ1dGUgICAgICAgICAgID0gJ3NldEF0dHJpYnV0ZScsXG4gICAgaGFzQXR0cmlidXRlICAgICAgICAgICA9ICdoYXNBdHRyaWJ1dGUnLFxuICAgIGNyZWF0ZUVsZW1lbnQgICAgICAgICAgPSAnY3JlYXRlRWxlbWVudCcsXG4gICAgYXBwZW5kQ2hpbGQgICAgICAgICAgICA9ICdhcHBlbmRDaGlsZCcsXG4gICAgaW5uZXJIVE1MICAgICAgICAgICAgICA9ICdpbm5lckhUTUwnLFxuICAgIGdldEVsZW1lbnRzQnlUYWdOYW1lICAgPSAnZ2V0RWxlbWVudHNCeVRhZ05hbWUnLFxuICAgIHByZXZlbnREZWZhdWx0ICAgICAgICAgPSAncHJldmVudERlZmF1bHQnLFxuICAgIGdldEJvdW5kaW5nQ2xpZW50UmVjdCAgPSAnZ2V0Qm91bmRpbmdDbGllbnRSZWN0JyxcbiAgICBxdWVyeVNlbGVjdG9yQWxsICAgICAgID0gJ3F1ZXJ5U2VsZWN0b3JBbGwnLFxuICAgIGdldEVsZW1lbnRzQnlDTEFTU05BTUUgPSAnZ2V0RWxlbWVudHNCeUNsYXNzTmFtZScsXG4gICAgZ2V0Q29tcHV0ZWRTdHlsZSAgICAgICA9ICdnZXRDb21wdXRlZFN0eWxlJywgIFxuICBcbiAgICBpbmRleE9mICAgICAgPSAnaW5kZXhPZicsXG4gICAgcGFyZW50Tm9kZSAgID0gJ3BhcmVudE5vZGUnLFxuICAgIGxlbmd0aCAgICAgICA9ICdsZW5ndGgnLFxuICAgIHRvTG93ZXJDYXNlICA9ICd0b0xvd2VyQ2FzZScsXG4gICAgVHJhbnNpdGlvbiAgID0gJ1RyYW5zaXRpb24nLFxuICAgIER1cmF0aW9uICAgICA9ICdEdXJhdGlvbicsXG4gICAgV2Via2l0ICAgICAgID0gJ1dlYmtpdCcsXG4gICAgc3R5bGUgICAgICAgID0gJ3N0eWxlJyxcbiAgICBwdXNoICAgICAgICAgPSAncHVzaCcsXG4gICAgdGFiaW5kZXggICAgID0gJ3RhYmluZGV4JyxcbiAgICBjb250YWlucyAgICAgPSAnY29udGFpbnMnLFxuICBcbiAgICBhY3RpdmUgICAgID0gJ2FjdGl2ZScsXG4gICAgc2hvd0NsYXNzICA9ICdzaG93JyxcbiAgICBjb2xsYXBzaW5nID0gJ2NvbGxhcHNpbmcnLFxuICAgIGRpc2FibGVkICAgPSAnZGlzYWJsZWQnLFxuICAgIGxvYWRpbmcgICAgPSAnbG9hZGluZycsXG4gICAgbGVmdCAgICAgICA9ICdsZWZ0JyxcbiAgICByaWdodCAgICAgID0gJ3JpZ2h0JyxcbiAgICB0b3AgICAgICAgID0gJ3RvcCcsXG4gICAgYm90dG9tICAgICA9ICdib3R0b20nLFxuICBcbiAgICAvLyB0b29sdGlwIC8gcG9wb3ZlclxuICAgIHRpcFBvc2l0aW9ucyA9IC9cXGIodG9wfGJvdHRvbXxsZWZ0fHJpZ2h0KSsvLFxuICBcbiAgICAvLyBtb2RhbFxuICAgIG1vZGFsT3ZlcmxheSA9IDAsXG4gICAgZml4ZWRUb3AgPSAnZml4ZWQtdG9wJyxcbiAgICBmaXhlZEJvdHRvbSA9ICdmaXhlZC1ib3R0b20nLFxuICBcbiAgICAvLyB0cmFuc2l0aW9uRW5kIHNpbmNlIDIuMC40XG4gICAgc3VwcG9ydFRyYW5zaXRpb25zID0gV2Via2l0K1RyYW5zaXRpb24gaW4gSFRNTFtzdHlsZV0gfHwgVHJhbnNpdGlvblt0b0xvd2VyQ2FzZV0oKSBpbiBIVE1MW3N0eWxlXSxcbiAgICB0cmFuc2l0aW9uRW5kRXZlbnQgPSBXZWJraXQrVHJhbnNpdGlvbiBpbiBIVE1MW3N0eWxlXSA/IFdlYmtpdFt0b0xvd2VyQ2FzZV0oKStUcmFuc2l0aW9uKydFbmQnIDogVHJhbnNpdGlvblt0b0xvd2VyQ2FzZV0oKSsnZW5kJyxcbiAgICB0cmFuc2l0aW9uRHVyYXRpb24gPSBXZWJraXQrRHVyYXRpb24gaW4gSFRNTFtzdHlsZV0gPyBXZWJraXRbdG9Mb3dlckNhc2VdKCkrVHJhbnNpdGlvbitEdXJhdGlvbiA6IFRyYW5zaXRpb25bdG9Mb3dlckNhc2VdKCkrRHVyYXRpb24sXG4gIFxuICAgIC8vIHNldCBuZXcgZm9jdXMgZWxlbWVudCBzaW5jZSAyLjAuM1xuICAgIHNldEZvY3VzID0gZnVuY3Rpb24oZWxlbWVudCl7XG4gICAgICBlbGVtZW50LmZvY3VzID8gZWxlbWVudC5mb2N1cygpIDogZWxlbWVudC5zZXRBY3RpdmUoKTtcbiAgICB9LFxuICBcbiAgICAvLyBjbGFzcyBtYW5pcHVsYXRpb24sIHNpbmNlIDIuMC4wIHJlcXVpcmVzIHBvbHlmaWxsLmpzXG4gICAgYWRkQ2xhc3MgPSBmdW5jdGlvbihlbGVtZW50LGNsYXNzTkFNRSkge1xuICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTkFNRSk7XG4gICAgfSxcbiAgICByZW1vdmVDbGFzcyA9IGZ1bmN0aW9uKGVsZW1lbnQsY2xhc3NOQU1FKSB7XG4gICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY2xhc3NOQU1FKTtcbiAgICB9LFxuICAgIGhhc0NsYXNzID0gZnVuY3Rpb24oZWxlbWVudCxjbGFzc05BTUUpeyAvLyBzaW5jZSAyLjAuMFxuICAgICAgcmV0dXJuIGVsZW1lbnQuY2xhc3NMaXN0W2NvbnRhaW5zXShjbGFzc05BTUUpO1xuICAgIH0sXG4gIFxuICAgIC8vIHNlbGVjdGlvbiBtZXRob2RzXG4gICAgZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IGZ1bmN0aW9uKGVsZW1lbnQsY2xhc3NOQU1FKSB7IC8vIHJldHVybnMgQXJyYXlcbiAgICAgIHJldHVybiBbXS5zbGljZS5jYWxsKGVsZW1lbnRbZ2V0RWxlbWVudHNCeUNMQVNTTkFNRV0oIGNsYXNzTkFNRSApKTtcbiAgICB9LFxuICAgIHF1ZXJ5RWxlbWVudCA9IGZ1bmN0aW9uIChzZWxlY3RvciwgcGFyZW50KSB7XG4gICAgICB2YXIgbG9va1VwID0gcGFyZW50ID8gcGFyZW50IDogRE9DO1xuICAgICAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gJ29iamVjdCcgPyBzZWxlY3RvciA6IGxvb2tVcC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICB9LFxuICAgIGdldENsb3Nlc3QgPSBmdW5jdGlvbiAoZWxlbWVudCwgc2VsZWN0b3IpIHsgLy9lbGVtZW50IGlzIHRoZSBlbGVtZW50IGFuZCBzZWxlY3RvciBpcyBmb3IgdGhlIGNsb3Nlc3QgcGFyZW50IGVsZW1lbnQgdG8gZmluZFxuICAgICAgLy8gc291cmNlIGh0dHA6Ly9nb21ha2V0aGluZ3MuY29tL2NsaW1iaW5nLXVwLWFuZC1kb3duLXRoZS1kb20tdHJlZS13aXRoLXZhbmlsbGEtamF2YXNjcmlwdC9cbiAgICAgIHZhciBmaXJzdENoYXIgPSBzZWxlY3Rvci5jaGFyQXQoMCksIHNlbGVjdG9yU3Vic3RyaW5nID0gc2VsZWN0b3Iuc3Vic3RyKDEpO1xuICAgICAgaWYgKCBmaXJzdENoYXIgPT09ICcuJyApIHsvLyBJZiBzZWxlY3RvciBpcyBhIGNsYXNzXG4gICAgICAgIGZvciAoIDsgZWxlbWVudCAmJiBlbGVtZW50ICE9PSBET0M7IGVsZW1lbnQgPSBlbGVtZW50W3BhcmVudE5vZGVdICkgeyAvLyBHZXQgY2xvc2VzdCBtYXRjaFxuICAgICAgICAgIGlmICggcXVlcnlFbGVtZW50KHNlbGVjdG9yLGVsZW1lbnRbcGFyZW50Tm9kZV0pICE9PSBudWxsICYmIGhhc0NsYXNzKGVsZW1lbnQsc2VsZWN0b3JTdWJzdHJpbmcpICkgeyByZXR1cm4gZWxlbWVudDsgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKCBmaXJzdENoYXIgPT09ICcjJyApIHsgLy8gSWYgc2VsZWN0b3IgaXMgYW4gSURcbiAgICAgICAgZm9yICggOyBlbGVtZW50ICYmIGVsZW1lbnQgIT09IERPQzsgZWxlbWVudCA9IGVsZW1lbnRbcGFyZW50Tm9kZV0gKSB7IC8vIEdldCBjbG9zZXN0IG1hdGNoXG4gICAgICAgICAgaWYgKCBlbGVtZW50LmlkID09PSBzZWxlY3RvclN1YnN0cmluZyApIHsgcmV0dXJuIGVsZW1lbnQ7IH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG4gIFxuICAgIC8vIGV2ZW50IGF0dGFjaCBqUXVlcnkgc3R5bGUgLyB0cmlnZ2VyICBzaW5jZSAxLjIuMFxuICAgIG9uID0gZnVuY3Rpb24gKGVsZW1lbnQsIGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKSB7XG4gICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCBmYWxzZTtcbiAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgb3B0aW9ucyk7XG4gICAgfSxcbiAgICBvZmYgPSBmdW5jdGlvbihlbGVtZW50LCBldmVudCwgaGFuZGxlciwgb3B0aW9ucykge1xuICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwgZmFsc2U7XG4gICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIsIG9wdGlvbnMpO1xuICAgIH0sXG4gICAgb25lID0gZnVuY3Rpb24gKGVsZW1lbnQsIGV2ZW50LCBoYW5kbGVyLCBvcHRpb25zKSB7IC8vIG9uZSBzaW5jZSAyLjAuNFxuICAgICAgb24oZWxlbWVudCwgZXZlbnQsIGZ1bmN0aW9uIGhhbmRsZXJXcmFwcGVyKGUpe1xuICAgICAgICBoYW5kbGVyKGUpO1xuICAgICAgICBvZmYoZWxlbWVudCwgZXZlbnQsIGhhbmRsZXJXcmFwcGVyLCBvcHRpb25zKTtcbiAgICAgIH0sIG9wdGlvbnMpO1xuICAgIH0sXG4gICAgLy8gZGV0ZXJtaW5lIHN1cHBvcnQgZm9yIHBhc3NpdmUgZXZlbnRzXG4gICAgc3VwcG9ydFBhc3NpdmUgPSAoZnVuY3Rpb24oKXtcbiAgICAgIC8vIFRlc3QgdmlhIGEgZ2V0dGVyIGluIHRoZSBvcHRpb25zIG9iamVjdCB0byBzZWUgaWYgdGhlIHBhc3NpdmUgcHJvcGVydHkgaXMgYWNjZXNzZWRcbiAgICAgIHZhciByZXN1bHQgPSBmYWxzZTtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBvcHRzID0gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAncGFzc2l2ZScsIHtcbiAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBvbmUoZ2xvYmFsT2JqZWN0LCAndGVzdFBhc3NpdmUnLCBudWxsLCBvcHRzKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gIFxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KCkpLFxuICAgIC8vIGV2ZW50IG9wdGlvbnNcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vV0lDRy9FdmVudExpc3RlbmVyT3B0aW9ucy9ibG9iL2doLXBhZ2VzL2V4cGxhaW5lci5tZCNmZWF0dXJlLWRldGVjdGlvblxuICAgIHBhc3NpdmVIYW5kbGVyID0gc3VwcG9ydFBhc3NpdmUgPyB7IHBhc3NpdmU6IHRydWUgfSA6IGZhbHNlLFxuICAgIC8vIHRyYW5zaXRpb25zXG4gICAgZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICB2YXIgZHVyYXRpb24gPSBzdXBwb3J0VHJhbnNpdGlvbnMgPyBnbG9iYWxPYmplY3RbZ2V0Q29tcHV0ZWRTdHlsZV0oZWxlbWVudClbdHJhbnNpdGlvbkR1cmF0aW9uXSA6IDA7XG4gICAgICBkdXJhdGlvbiA9IHBhcnNlRmxvYXQoZHVyYXRpb24pO1xuICAgICAgZHVyYXRpb24gPSB0eXBlb2YgZHVyYXRpb24gPT09ICdudW1iZXInICYmICFpc05hTihkdXJhdGlvbikgPyBkdXJhdGlvbiAqIDEwMDAgOiAwO1xuICAgICAgcmV0dXJuIGR1cmF0aW9uOyAvLyB3ZSB0YWtlIGEgc2hvcnQgb2Zmc2V0IHRvIG1ha2Ugc3VyZSB3ZSBmaXJlIG9uIHRoZSBuZXh0IGZyYW1lIGFmdGVyIGFuaW1hdGlvblxuICAgIH0sXG4gICAgZW11bGF0ZVRyYW5zaXRpb25FbmQgPSBmdW5jdGlvbihlbGVtZW50LGhhbmRsZXIpeyAvLyBlbXVsYXRlVHJhbnNpdGlvbkVuZCBzaW5jZSAyLjAuNFxuICAgICAgdmFyIGNhbGxlZCA9IDAsIGR1cmF0aW9uID0gZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQoZWxlbWVudCk7XG4gICAgICBkdXJhdGlvbiA/IG9uZShlbGVtZW50LCB0cmFuc2l0aW9uRW5kRXZlbnQsIGZ1bmN0aW9uKGUpeyAhY2FsbGVkICYmIGhhbmRsZXIoZSksIGNhbGxlZCA9IDE7IH0pXG4gICAgICAgICAgICAgICA6IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7ICFjYWxsZWQgJiYgaGFuZGxlcigpLCBjYWxsZWQgPSAxOyB9LCAxNyk7XG4gICAgfSxcbiAgICBib290c3RyYXBDdXN0b21FdmVudCA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGNvbXBvbmVudE5hbWUsIHJlbGF0ZWQpIHtcbiAgICAgIHZhciBPcmlnaW5hbEN1c3RvbUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCBldmVudE5hbWUgKyAnLmJzLicgKyBjb21wb25lbnROYW1lKTtcbiAgICAgIE9yaWdpbmFsQ3VzdG9tRXZlbnQucmVsYXRlZFRhcmdldCA9IHJlbGF0ZWQ7XG4gICAgICB0aGlzLmRpc3BhdGNoRXZlbnQoT3JpZ2luYWxDdXN0b21FdmVudCk7XG4gICAgfSxcbiAgXG4gICAgLy8gdG9vbHRpcCAvIHBvcG92ZXIgc3R1ZmZcbiAgICBnZXRTY3JvbGwgPSBmdW5jdGlvbigpIHsgLy8gYWxzbyBBZmZpeCBhbmQgU2Nyb2xsU3B5IHVzZXMgaXRcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHkgOiBnbG9iYWxPYmplY3QucGFnZVlPZmZzZXQgfHwgSFRNTFtzY3JvbGxUb3BdLFxuICAgICAgICB4IDogZ2xvYmFsT2JqZWN0LnBhZ2VYT2Zmc2V0IHx8IEhUTUxbc2Nyb2xsTGVmdF1cbiAgICAgIH1cbiAgICB9LFxuICAgIHN0eWxlVGlwID0gZnVuY3Rpb24obGluayxlbGVtZW50LHBvc2l0aW9uLHBhcmVudCkgeyAvLyBib3RoIHBvcG92ZXJzIGFuZCB0b29sdGlwcyAodGFyZ2V0LHRvb2x0aXAscGxhY2VtZW50LGVsZW1lbnRUb0FwcGVuZFRvKVxuICAgICAgdmFyIGVsZW1lbnREaW1lbnNpb25zID0geyB3IDogZWxlbWVudFtvZmZzZXRXaWR0aF0sIGg6IGVsZW1lbnRbb2Zmc2V0SGVpZ2h0XSB9LFxuICAgICAgICAgIHdpbmRvd1dpZHRoID0gKEhUTUxbY2xpZW50V2lkdGhdIHx8IERPQ1tib2R5XVtjbGllbnRXaWR0aF0pLFxuICAgICAgICAgIHdpbmRvd0hlaWdodCA9IChIVE1MW2NsaWVudEhlaWdodF0gfHwgRE9DW2JvZHldW2NsaWVudEhlaWdodF0pLFxuICAgICAgICAgIHJlY3QgPSBsaW5rW2dldEJvdW5kaW5nQ2xpZW50UmVjdF0oKSxcbiAgICAgICAgICBzY3JvbGwgPSBwYXJlbnQgPT09IERPQ1tib2R5XSA/IGdldFNjcm9sbCgpIDogeyB4OiBwYXJlbnRbb2Zmc2V0TGVmdF0gKyBwYXJlbnRbc2Nyb2xsTGVmdF0sIHk6IHBhcmVudFtvZmZzZXRUb3BdICsgcGFyZW50W3Njcm9sbFRvcF0gfSxcbiAgICAgICAgICBsaW5rRGltZW5zaW9ucyA9IHsgdzogcmVjdFtyaWdodF0gLSByZWN0W2xlZnRdLCBoOiByZWN0W2JvdHRvbV0gLSByZWN0W3RvcF0gfSxcbiAgICAgICAgICBpc1BvcG92ZXIgPSBoYXNDbGFzcyhlbGVtZW50LCdwb3BvdmVyJyksXG4gICAgICAgICAgdG9wUG9zaXRpb24sIGxlZnRQb3NpdGlvbixcbiAgXG4gICAgICAgICAgYXJyb3cgPSBxdWVyeUVsZW1lbnQoJy5hcnJvdycsZWxlbWVudCksXG4gICAgICAgICAgYXJyb3dUb3AsIGFycm93TGVmdCwgYXJyb3dXaWR0aCwgYXJyb3dIZWlnaHQsXG4gIFxuICAgICAgICAgIGhhbGZUb3BFeGNlZWQgPSByZWN0W3RvcF0gKyBsaW5rRGltZW5zaW9ucy5oLzIgLSBlbGVtZW50RGltZW5zaW9ucy5oLzIgPCAwLFxuICAgICAgICAgIGhhbGZMZWZ0RXhjZWVkID0gcmVjdFtsZWZ0XSArIGxpbmtEaW1lbnNpb25zLncvMiAtIGVsZW1lbnREaW1lbnNpb25zLncvMiA8IDAsXG4gICAgICAgICAgaGFsZlJpZ2h0RXhjZWVkID0gcmVjdFtsZWZ0XSArIGVsZW1lbnREaW1lbnNpb25zLncvMiArIGxpbmtEaW1lbnNpb25zLncvMiA+PSB3aW5kb3dXaWR0aCxcbiAgICAgICAgICBoYWxmQm90dG9tRXhjZWVkID0gcmVjdFt0b3BdICsgZWxlbWVudERpbWVuc2lvbnMuaC8yICsgbGlua0RpbWVuc2lvbnMuaC8yID49IHdpbmRvd0hlaWdodCxcbiAgICAgICAgICB0b3BFeGNlZWQgPSByZWN0W3RvcF0gLSBlbGVtZW50RGltZW5zaW9ucy5oIDwgMCxcbiAgICAgICAgICBsZWZ0RXhjZWVkID0gcmVjdFtsZWZ0XSAtIGVsZW1lbnREaW1lbnNpb25zLncgPCAwLFxuICAgICAgICAgIGJvdHRvbUV4Y2VlZCA9IHJlY3RbdG9wXSArIGVsZW1lbnREaW1lbnNpb25zLmggKyBsaW5rRGltZW5zaW9ucy5oID49IHdpbmRvd0hlaWdodCxcbiAgICAgICAgICByaWdodEV4Y2VlZCA9IHJlY3RbbGVmdF0gKyBlbGVtZW50RGltZW5zaW9ucy53ICsgbGlua0RpbWVuc2lvbnMudyA+PSB3aW5kb3dXaWR0aDtcbiAgXG4gICAgICAvLyByZWNvbXB1dGUgcG9zaXRpb25cbiAgICAgIHBvc2l0aW9uID0gKHBvc2l0aW9uID09PSBsZWZ0IHx8IHBvc2l0aW9uID09PSByaWdodCkgJiYgbGVmdEV4Y2VlZCAmJiByaWdodEV4Y2VlZCA/IHRvcCA6IHBvc2l0aW9uOyAvLyBmaXJzdCwgd2hlbiBib3RoIGxlZnQgYW5kIHJpZ2h0IGxpbWl0cyBhcmUgZXhjZWVkZWQsIHdlIGZhbGwgYmFjayB0byB0b3B8Ym90dG9tXG4gICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uID09PSB0b3AgJiYgdG9wRXhjZWVkID8gYm90dG9tIDogcG9zaXRpb247XG4gICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uID09PSBib3R0b20gJiYgYm90dG9tRXhjZWVkID8gdG9wIDogcG9zaXRpb247XG4gICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uID09PSBsZWZ0ICYmIGxlZnRFeGNlZWQgPyByaWdodCA6IHBvc2l0aW9uO1xuICAgICAgcG9zaXRpb24gPSBwb3NpdGlvbiA9PT0gcmlnaHQgJiYgcmlnaHRFeGNlZWQgPyBsZWZ0IDogcG9zaXRpb247XG4gIFxuICAgICAgLy8gdXBkYXRlIHRvb2x0aXAvcG9wb3ZlciBjbGFzc1xuICAgICAgZWxlbWVudC5jbGFzc05hbWVbaW5kZXhPZl0ocG9zaXRpb24pID09PSAtMSAmJiAoZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZS5yZXBsYWNlKHRpcFBvc2l0aW9ucyxwb3NpdGlvbikpO1xuICBcbiAgICAgIC8vIHdlIGNoZWNrIHRoZSBjb21wdXRlZCB3aWR0aCAmIGhlaWdodCBhbmQgdXBkYXRlIGhlcmVcbiAgICAgIGFycm93V2lkdGggPSBhcnJvd1tvZmZzZXRXaWR0aF07IGFycm93SGVpZ2h0ID0gYXJyb3dbb2Zmc2V0SGVpZ2h0XTtcbiAgXG4gICAgICAvLyBhcHBseSBzdHlsaW5nIHRvIHRvb2x0aXAgb3IgcG9wb3ZlclxuICAgICAgaWYgKCBwb3NpdGlvbiA9PT0gbGVmdCB8fCBwb3NpdGlvbiA9PT0gcmlnaHQgKSB7IC8vIHNlY29uZGFyeXxzaWRlIHBvc2l0aW9uc1xuICAgICAgICBpZiAoIHBvc2l0aW9uID09PSBsZWZ0ICkgeyAvLyBMRUZUXG4gICAgICAgICAgbGVmdFBvc2l0aW9uID0gcmVjdFtsZWZ0XSArIHNjcm9sbC54IC0gZWxlbWVudERpbWVuc2lvbnMudyAtICggaXNQb3BvdmVyID8gYXJyb3dXaWR0aCA6IDAgKTtcbiAgICAgICAgfSBlbHNlIHsgLy8gUklHSFRcbiAgICAgICAgICBsZWZ0UG9zaXRpb24gPSByZWN0W2xlZnRdICsgc2Nyb2xsLnggKyBsaW5rRGltZW5zaW9ucy53O1xuICAgICAgICB9XG4gIFxuICAgICAgICAvLyBhZGp1c3QgdG9wIGFuZCBhcnJvd1xuICAgICAgICBpZiAoaGFsZlRvcEV4Y2VlZCkge1xuICAgICAgICAgIHRvcFBvc2l0aW9uID0gcmVjdFt0b3BdICsgc2Nyb2xsLnk7XG4gICAgICAgICAgYXJyb3dUb3AgPSBsaW5rRGltZW5zaW9ucy5oLzIgLSBhcnJvd1dpZHRoO1xuICAgICAgICB9IGVsc2UgaWYgKGhhbGZCb3R0b21FeGNlZWQpIHtcbiAgICAgICAgICB0b3BQb3NpdGlvbiA9IHJlY3RbdG9wXSArIHNjcm9sbC55IC0gZWxlbWVudERpbWVuc2lvbnMuaCArIGxpbmtEaW1lbnNpb25zLmg7XG4gICAgICAgICAgYXJyb3dUb3AgPSBlbGVtZW50RGltZW5zaW9ucy5oIC0gbGlua0RpbWVuc2lvbnMuaC8yIC0gYXJyb3dXaWR0aDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0b3BQb3NpdGlvbiA9IHJlY3RbdG9wXSArIHNjcm9sbC55IC0gZWxlbWVudERpbWVuc2lvbnMuaC8yICsgbGlua0RpbWVuc2lvbnMuaC8yO1xuICAgICAgICAgIGFycm93VG9wID0gZWxlbWVudERpbWVuc2lvbnMuaC8yIC0gKGlzUG9wb3ZlciA/IGFycm93SGVpZ2h0KjAuOSA6IGFycm93SGVpZ2h0LzIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKCBwb3NpdGlvbiA9PT0gdG9wIHx8IHBvc2l0aW9uID09PSBib3R0b20gKSB7IC8vIHByaW1hcnl8dmVydGljYWwgcG9zaXRpb25zXG4gICAgICAgIGlmICggcG9zaXRpb24gPT09IHRvcCkgeyAvLyBUT1BcbiAgICAgICAgICB0b3BQb3NpdGlvbiA9ICByZWN0W3RvcF0gKyBzY3JvbGwueSAtIGVsZW1lbnREaW1lbnNpb25zLmggLSAoIGlzUG9wb3ZlciA/IGFycm93SGVpZ2h0IDogMCApO1xuICAgICAgICB9IGVsc2UgeyAvLyBCT1RUT01cbiAgICAgICAgICB0b3BQb3NpdGlvbiA9IHJlY3RbdG9wXSArIHNjcm9sbC55ICsgbGlua0RpbWVuc2lvbnMuaDtcbiAgICAgICAgfVxuICAgICAgICAvLyBhZGp1c3QgbGVmdCB8IHJpZ2h0IGFuZCBhbHNvIHRoZSBhcnJvd1xuICAgICAgICBpZiAoaGFsZkxlZnRFeGNlZWQpIHtcbiAgICAgICAgICBsZWZ0UG9zaXRpb24gPSAwO1xuICAgICAgICAgIGFycm93TGVmdCA9IHJlY3RbbGVmdF0gKyBsaW5rRGltZW5zaW9ucy53LzIgLSBhcnJvd1dpZHRoO1xuICAgICAgICB9IGVsc2UgaWYgKGhhbGZSaWdodEV4Y2VlZCkge1xuICAgICAgICAgIGxlZnRQb3NpdGlvbiA9IHdpbmRvd1dpZHRoIC0gZWxlbWVudERpbWVuc2lvbnMudyoxLjAxO1xuICAgICAgICAgIGFycm93TGVmdCA9IGVsZW1lbnREaW1lbnNpb25zLncgLSAoIHdpbmRvd1dpZHRoIC0gcmVjdFtsZWZ0XSApICsgbGlua0RpbWVuc2lvbnMudy8yIC0gYXJyb3dXaWR0aC8yO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxlZnRQb3NpdGlvbiA9IHJlY3RbbGVmdF0gKyBzY3JvbGwueCAtIGVsZW1lbnREaW1lbnNpb25zLncvMiArIGxpbmtEaW1lbnNpb25zLncvMjtcbiAgICAgICAgICBhcnJvd0xlZnQgPSBlbGVtZW50RGltZW5zaW9ucy53LzIgLSAoIGlzUG9wb3ZlciA/IGFycm93V2lkdGggOiBhcnJvd1dpZHRoLzIgKTtcbiAgICAgICAgfVxuICAgICAgfVxuICBcbiAgICAgIC8vIGFwcGx5IHN0eWxlIHRvIHRvb2x0aXAvcG9wb3ZlciBhbmQgaXRzIGFycm93XG4gICAgICBlbGVtZW50W3N0eWxlXVt0b3BdID0gdG9wUG9zaXRpb24gKyAncHgnO1xuICAgICAgZWxlbWVudFtzdHlsZV1bbGVmdF0gPSBsZWZ0UG9zaXRpb24gKyAncHgnO1xuICBcbiAgICAgIGFycm93VG9wICYmIChhcnJvd1tzdHlsZV1bdG9wXSA9IGFycm93VG9wICsgJ3B4Jyk7XG4gICAgICBhcnJvd0xlZnQgJiYgKGFycm93W3N0eWxlXVtsZWZ0XSA9IGFycm93TGVmdCArICdweCcpO1xuICAgIH07XG4gIFxuICBCU04udmVyc2lvbiA9ICcyLjAuMjcnO1xuICBcbiAgLyogTmF0aXZlIEphdmFzY3JpcHQgZm9yIEJvb3RzdHJhcCA0IHwgTW9kYWxcbiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4gIFxuICAvLyBNT0RBTCBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PVxuICB2YXIgTW9kYWwgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zKSB7IC8vIGVsZW1lbnQgY2FuIGJlIHRoZSBtb2RhbC90cmlnZ2VyaW5nIGJ1dHRvblxuICBcbiAgICAvLyB0aGUgbW9kYWwgKGJvdGggSmF2YVNjcmlwdCAvIERBVEEgQVBJIGluaXQpIC8gdHJpZ2dlcmluZyBidXR0b24gZWxlbWVudCAoREFUQSBBUEkpXG4gICAgZWxlbWVudCA9IHF1ZXJ5RWxlbWVudChlbGVtZW50KTtcbiAgXG4gICAgICAvLyBzdHJpbmdzXG4gICAgICB2YXIgY29tcG9uZW50ID0gJ21vZGFsJyxcbiAgICAgICAgc3RhdGljU3RyaW5nID0gJ3N0YXRpYycsXG4gICAgICAgIG1vZGFsVHJpZ2dlciA9ICdtb2RhbFRyaWdnZXInLFxuICAgICAgICBwYWRkaW5nUmlnaHQgPSAncGFkZGluZ1JpZ2h0JyxcbiAgICAgICAgbW9kYWxCYWNrZHJvcFN0cmluZyA9ICdtb2RhbC1iYWNrZHJvcCcsXG4gICAgICAgIGlzQW5pbWF0aW5nID0gJ2lzQW5pbWF0aW5nJyxcbiAgICAgICAgLy8gZGV0ZXJtaW5lIG1vZGFsLCB0cmlnZ2VyaW5nIGVsZW1lbnRcbiAgICAgICAgYnRuQ2hlY2sgPSBlbGVtZW50W2dldEF0dHJpYnV0ZV0oZGF0YVRhcmdldCl8fGVsZW1lbnRbZ2V0QXR0cmlidXRlXSgnaHJlZicpLFxuICAgICAgICBjaGVja01vZGFsID0gcXVlcnlFbGVtZW50KCBidG5DaGVjayApLFxuICAgICAgICBtb2RhbCA9IGhhc0NsYXNzKGVsZW1lbnQsY29tcG9uZW50KSA/IGVsZW1lbnQgOiBjaGVja01vZGFsO1xuICBcbiAgICAgIGlmICggaGFzQ2xhc3MoZWxlbWVudCwgY29tcG9uZW50KSApIHsgZWxlbWVudCA9IG51bGw7IH0gLy8gbW9kYWwgaXMgbm93IGluZGVwZW5kZW50IG9mIGl0J3MgdHJpZ2dlcmluZyBlbGVtZW50XG4gIFxuICAgIGlmICggIW1vZGFsICkgeyByZXR1cm47IH0gLy8gaW52YWxpZGF0ZVxuICBcbiAgICAvLyBzZXQgb3B0aW9uc1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBcbiAgICB0aGlzW2tleWJvYXJkXSA9IG9wdGlvbnNba2V5Ym9hcmRdID09PSBmYWxzZSB8fCBtb2RhbFtnZXRBdHRyaWJ1dGVdKGRhdGFLZXlib2FyZCkgPT09ICdmYWxzZScgPyBmYWxzZSA6IHRydWU7XG4gICAgdGhpc1tiYWNrZHJvcF0gPSBvcHRpb25zW2JhY2tkcm9wXSA9PT0gc3RhdGljU3RyaW5nIHx8IG1vZGFsW2dldEF0dHJpYnV0ZV0oZGF0YWJhY2tkcm9wKSA9PT0gc3RhdGljU3RyaW5nID8gc3RhdGljU3RyaW5nIDogdHJ1ZTtcbiAgICB0aGlzW2JhY2tkcm9wXSA9IG9wdGlvbnNbYmFja2Ryb3BdID09PSBmYWxzZSB8fCBtb2RhbFtnZXRBdHRyaWJ1dGVdKGRhdGFiYWNrZHJvcCkgPT09ICdmYWxzZScgPyBmYWxzZSA6IHRoaXNbYmFja2Ryb3BdO1xuICAgIHRoaXNbYW5pbWF0aW9uXSA9IGhhc0NsYXNzKG1vZGFsLCAnZmFkZScpID8gdHJ1ZSA6IGZhbHNlO1xuICAgIHRoaXNbY29udGVudF0gID0gb3B0aW9uc1tjb250ZW50XTsgLy8gSmF2YVNjcmlwdCBvbmx5XG4gIFxuICAgIC8vIHNldCBhbiBpbml0aWFsIHN0YXRlIG9mIHRoZSBtb2RhbFxuICAgIG1vZGFsW2lzQW5pbWF0aW5nXSA9IGZhbHNlO1xuICAgIFxuICAgIC8vIGJpbmQsIGNvbnN0YW50cywgZXZlbnQgdGFyZ2V0cyBhbmQgb3RoZXIgdmFyc1xuICAgIHZhciBzZWxmID0gdGhpcywgcmVsYXRlZFRhcmdldCA9IG51bGwsXG4gICAgICBib2R5SXNPdmVyZmxvd2luZywgc2Nyb2xsQmFyV2lkdGgsIG92ZXJsYXksIG92ZXJsYXlEZWxheSwgbW9kYWxUaW1lcixcbiAgXG4gICAgICAvLyBhbHNvIGZpbmQgZml4ZWQtdG9wIC8gZml4ZWQtYm90dG9tIGl0ZW1zXG4gICAgICBmaXhlZEl0ZW1zID0gZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShIVE1MLGZpeGVkVG9wKS5jb25jYXQoZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShIVE1MLGZpeGVkQm90dG9tKSksXG4gIFxuICAgICAgLy8gcHJpdmF0ZSBtZXRob2RzXG4gICAgICBnZXRXaW5kb3dXaWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaHRtbFJlY3QgPSBIVE1MW2dldEJvdW5kaW5nQ2xpZW50UmVjdF0oKTtcbiAgICAgICAgcmV0dXJuIGdsb2JhbE9iamVjdFtpbm5lcldpZHRoXSB8fCAoaHRtbFJlY3RbcmlnaHRdIC0gTWF0aC5hYnMoaHRtbFJlY3RbbGVmdF0pKTtcbiAgICAgIH0sXG4gICAgICBzZXRTY3JvbGxiYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBib2R5U3R5bGUgPSBnbG9iYWxPYmplY3RbZ2V0Q29tcHV0ZWRTdHlsZV0oRE9DW2JvZHldKSxcbiAgICAgICAgICAgIGJvZHlQYWQgPSBwYXJzZUludCgoYm9keVN0eWxlW3BhZGRpbmdSaWdodF0pLCAxMCksIGl0ZW1QYWQ7XG4gICAgICAgIGlmIChib2R5SXNPdmVyZmxvd2luZykge1xuICAgICAgICAgIERPQ1tib2R5XVtzdHlsZV1bcGFkZGluZ1JpZ2h0XSA9IChib2R5UGFkICsgc2Nyb2xsQmFyV2lkdGgpICsgJ3B4JztcbiAgICAgICAgICBtb2RhbFtzdHlsZV1bcGFkZGluZ1JpZ2h0XSA9IHNjcm9sbEJhcldpZHRoKydweCc7XG4gICAgICAgICAgaWYgKGZpeGVkSXRlbXNbbGVuZ3RoXSl7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZpeGVkSXRlbXNbbGVuZ3RoXTsgaSsrKSB7XG4gICAgICAgICAgICAgIGl0ZW1QYWQgPSBnbG9iYWxPYmplY3RbZ2V0Q29tcHV0ZWRTdHlsZV0oZml4ZWRJdGVtc1tpXSlbcGFkZGluZ1JpZ2h0XTtcbiAgICAgICAgICAgICAgZml4ZWRJdGVtc1tpXVtzdHlsZV1bcGFkZGluZ1JpZ2h0XSA9ICggcGFyc2VJbnQoaXRlbVBhZCkgKyBzY3JvbGxCYXJXaWR0aCkgKyAncHgnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJlc2V0U2Nyb2xsYmFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBET0NbYm9keV1bc3R5bGVdW3BhZGRpbmdSaWdodF0gPSAnJztcbiAgICAgICAgbW9kYWxbc3R5bGVdW3BhZGRpbmdSaWdodF0gPSAnJztcbiAgICAgICAgaWYgKGZpeGVkSXRlbXNbbGVuZ3RoXSl7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaXhlZEl0ZW1zW2xlbmd0aF07IGkrKykge1xuICAgICAgICAgICAgZml4ZWRJdGVtc1tpXVtzdHlsZV1bcGFkZGluZ1JpZ2h0XSA9ICcnO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG1lYXN1cmVTY3JvbGxiYXIgPSBmdW5jdGlvbiAoKSB7IC8vIHRoeCB3YWxzaFxuICAgICAgICB2YXIgc2Nyb2xsRGl2ID0gRE9DW2NyZWF0ZUVsZW1lbnRdKCdkaXYnKSwgd2lkdGhWYWx1ZTtcbiAgICAgICAgc2Nyb2xsRGl2LmNsYXNzTmFtZSA9IGNvbXBvbmVudCsnLXNjcm9sbGJhci1tZWFzdXJlJzsgLy8gdGhpcyBpcyBoZXJlIHRvIHN0YXlcbiAgICAgICAgRE9DW2JvZHldW2FwcGVuZENoaWxkXShzY3JvbGxEaXYpO1xuICAgICAgICB3aWR0aFZhbHVlID0gc2Nyb2xsRGl2W29mZnNldFdpZHRoXSAtIHNjcm9sbERpdltjbGllbnRXaWR0aF07XG4gICAgICAgIERPQ1tib2R5XS5yZW1vdmVDaGlsZChzY3JvbGxEaXYpO1xuICAgICAgICByZXR1cm4gd2lkdGhWYWx1ZTtcbiAgICAgIH0sXG4gICAgICBjaGVja1Njcm9sbGJhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgYm9keUlzT3ZlcmZsb3dpbmcgPSBET0NbYm9keV1bY2xpZW50V2lkdGhdIDwgZ2V0V2luZG93V2lkdGgoKTtcbiAgICAgICAgc2Nyb2xsQmFyV2lkdGggPSBtZWFzdXJlU2Nyb2xsYmFyKCk7XG4gICAgICB9LFxuICAgICAgY3JlYXRlT3ZlcmxheSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbmV3T3ZlcmxheSA9IERPQ1tjcmVhdGVFbGVtZW50XSgnZGl2Jyk7XG4gICAgICAgIG92ZXJsYXkgPSBxdWVyeUVsZW1lbnQoJy4nK21vZGFsQmFja2Ryb3BTdHJpbmcpO1xuICBcbiAgICAgICAgaWYgKCBvdmVybGF5ID09PSBudWxsICkge1xuICAgICAgICAgIG5ld092ZXJsYXlbc2V0QXR0cmlidXRlXSgnY2xhc3MnLCBtb2RhbEJhY2tkcm9wU3RyaW5nICsgKHNlbGZbYW5pbWF0aW9uXSA/ICcgZmFkZScgOiAnJykpO1xuICAgICAgICAgIG92ZXJsYXkgPSBuZXdPdmVybGF5O1xuICAgICAgICAgIERPQ1tib2R5XVthcHBlbmRDaGlsZF0ob3ZlcmxheSk7XG4gICAgICAgIH1cbiAgICAgICAgbW9kYWxPdmVybGF5ID0gMTtcbiAgICAgIH0sXG4gICAgICByZW1vdmVPdmVybGF5ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIG92ZXJsYXkgPSBxdWVyeUVsZW1lbnQoJy4nK21vZGFsQmFja2Ryb3BTdHJpbmcpO1xuICAgICAgICBpZiAoIG92ZXJsYXkgJiYgb3ZlcmxheSAhPT0gbnVsbCAmJiB0eXBlb2Ygb3ZlcmxheSA9PT0gJ29iamVjdCcgKSB7XG4gICAgICAgICAgbW9kYWxPdmVybGF5ID0gMDtcbiAgICAgICAgICBET0NbYm9keV0ucmVtb3ZlQ2hpbGQob3ZlcmxheSk7IG92ZXJsYXkgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gdHJpZ2dlcnNcbiAgICAgIHRyaWdnZXJTaG93ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHNldEZvY3VzKG1vZGFsKTtcbiAgICAgICAgbW9kYWxbaXNBbmltYXRpbmddID0gZmFsc2U7XG4gICAgICAgIGJvb3RzdHJhcEN1c3RvbUV2ZW50LmNhbGwobW9kYWwsIHNob3duRXZlbnQsIGNvbXBvbmVudCwgcmVsYXRlZFRhcmdldCk7XG4gIFxuICAgICAgICBvbihnbG9iYWxPYmplY3QsIHJlc2l6ZUV2ZW50LCBzZWxmLnVwZGF0ZSwgcGFzc2l2ZUhhbmRsZXIpO1xuICAgICAgICBvbihtb2RhbCwgY2xpY2tFdmVudCwgZGlzbWlzc0hhbmRsZXIpO1xuICAgICAgICBvbihET0MsIGtleWRvd25FdmVudCwga2V5SGFuZGxlcik7ICAgICAgXG4gICAgICB9LFxuICAgICAgdHJpZ2dlckhpZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgbW9kYWxbc3R5bGVdLmRpc3BsYXkgPSAnJztcbiAgICAgICAgZWxlbWVudCAmJiAoc2V0Rm9jdXMoZWxlbWVudCkpO1xuICAgICAgICBib290c3RyYXBDdXN0b21FdmVudC5jYWxsKG1vZGFsLCBoaWRkZW5FdmVudCwgY29tcG9uZW50KTtcbiAgXG4gICAgICAgIChmdW5jdGlvbigpe1xuICAgICAgICAgIGlmICghZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShET0MsY29tcG9uZW50KycgJytzaG93Q2xhc3MpWzBdKSB7XG4gICAgICAgICAgICByZXNldFNjcm9sbGJhcigpO1xuICAgICAgICAgICAgcmVtb3ZlQ2xhc3MoRE9DW2JvZHldLGNvbXBvbmVudCsnLW9wZW4nKTtcbiAgICAgICAgICAgIG92ZXJsYXkgJiYgaGFzQ2xhc3Mob3ZlcmxheSwnZmFkZScpID8gKHJlbW92ZUNsYXNzKG92ZXJsYXksc2hvd0NsYXNzKSwgZW11bGF0ZVRyYW5zaXRpb25FbmQob3ZlcmxheSxyZW1vdmVPdmVybGF5KSlcbiAgICAgICAgICAgIDogcmVtb3ZlT3ZlcmxheSgpO1xuICBcbiAgICAgICAgICAgIG9mZihnbG9iYWxPYmplY3QsIHJlc2l6ZUV2ZW50LCBzZWxmLnVwZGF0ZSwgcGFzc2l2ZUhhbmRsZXIpO1xuICAgICAgICAgICAgb2ZmKG1vZGFsLCBjbGlja0V2ZW50LCBkaXNtaXNzSGFuZGxlcik7XG4gICAgICAgICAgICBvZmYoRE9DLCBrZXlkb3duRXZlbnQsIGtleUhhbmRsZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSgpKTtcbiAgICAgICAgbW9kYWxbaXNBbmltYXRpbmddID0gZmFsc2U7XG4gICAgICB9LFxuICAgICAgLy8gaGFuZGxlcnNcbiAgICAgIGNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKCBtb2RhbFtpc0FuaW1hdGluZ10gKSByZXR1cm47XG4gIFxuICAgICAgICB2YXIgY2xpY2tUYXJnZXQgPSBlW3RhcmdldF07XG4gICAgICAgIGNsaWNrVGFyZ2V0ID0gY2xpY2tUYXJnZXRbaGFzQXR0cmlidXRlXShkYXRhVGFyZ2V0KSB8fCBjbGlja1RhcmdldFtoYXNBdHRyaWJ1dGVdKCdocmVmJykgPyBjbGlja1RhcmdldCA6IGNsaWNrVGFyZ2V0W3BhcmVudE5vZGVdO1xuICAgICAgICBpZiAoIGNsaWNrVGFyZ2V0ID09PSBlbGVtZW50ICYmICFoYXNDbGFzcyhtb2RhbCxzaG93Q2xhc3MpICkge1xuICAgICAgICAgIG1vZGFsW21vZGFsVHJpZ2dlcl0gPSBlbGVtZW50O1xuICAgICAgICAgIHJlbGF0ZWRUYXJnZXQgPSBlbGVtZW50O1xuICAgICAgICAgIHNlbGYuc2hvdygpO1xuICAgICAgICAgIGVbcHJldmVudERlZmF1bHRdKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBrZXlIYW5kbGVyID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBpZiAoIG1vZGFsW2lzQW5pbWF0aW5nXSApIHJldHVybjtcbiAgXG4gICAgICAgIGlmIChzZWxmW2tleWJvYXJkXSAmJiBlLndoaWNoID09IDI3ICYmIGhhc0NsYXNzKG1vZGFsLHNob3dDbGFzcykgKSB7XG4gICAgICAgICAgc2VsZi5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBkaXNtaXNzSGFuZGxlciA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKCBtb2RhbFtpc0FuaW1hdGluZ10gKSByZXR1cm47XG4gICAgICAgIHZhciBjbGlja1RhcmdldCA9IGVbdGFyZ2V0XTtcbiAgXG4gICAgICAgIGlmICggaGFzQ2xhc3MobW9kYWwsc2hvd0NsYXNzKSAmJiAoIGNsaWNrVGFyZ2V0W3BhcmVudE5vZGVdW2dldEF0dHJpYnV0ZV0oZGF0YURpc21pc3MpID09PSBjb21wb25lbnRcbiAgICAgICAgICAgIHx8IGNsaWNrVGFyZ2V0W2dldEF0dHJpYnV0ZV0oZGF0YURpc21pc3MpID09PSBjb21wb25lbnRcbiAgICAgICAgICAgIHx8IGNsaWNrVGFyZ2V0ID09PSBtb2RhbCAmJiBzZWxmW2JhY2tkcm9wXSAhPT0gc3RhdGljU3RyaW5nICkgKSB7XG4gICAgICAgICAgc2VsZi5oaWRlKCk7IHJlbGF0ZWRUYXJnZXQgPSBudWxsO1xuICAgICAgICAgIGVbcHJldmVudERlZmF1bHRdKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gIFxuICAgIC8vIHB1YmxpYyBtZXRob2RzXG4gICAgdGhpcy50b2dnbGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICggaGFzQ2xhc3MobW9kYWwsc2hvd0NsYXNzKSApIHt0aGlzLmhpZGUoKTt9IGVsc2Uge3RoaXMuc2hvdygpO31cbiAgICB9O1xuICAgIHRoaXMuc2hvdyA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCBoYXNDbGFzcyhtb2RhbCxzaG93Q2xhc3MpIHx8IG1vZGFsW2lzQW5pbWF0aW5nXSApIHtyZXR1cm59XG4gIFxuICAgICAgY2xlYXJUaW1lb3V0KG1vZGFsVGltZXIpO1xuICAgICAgbW9kYWxUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgbW9kYWxbaXNBbmltYXRpbmddID0gdHJ1ZTtcbiAgICAgICAgYm9vdHN0cmFwQ3VzdG9tRXZlbnQuY2FsbChtb2RhbCwgc2hvd0V2ZW50LCBjb21wb25lbnQsIHJlbGF0ZWRUYXJnZXQpO1xuICBcbiAgICAgICAgLy8gd2UgZWxlZ2FudGx5IGhpZGUgYW55IG9wZW5lZCBtb2RhbFxuICAgICAgICB2YXIgY3VycmVudE9wZW4gPSBnZXRFbGVtZW50c0J5Q2xhc3NOYW1lKERPQyxjb21wb25lbnQrJyAnK3Nob3dDbGFzcylbMF07XG4gICAgICAgIGlmIChjdXJyZW50T3BlbiAmJiBjdXJyZW50T3BlbiAhPT0gbW9kYWwpIHtcbiAgICAgICAgICBtb2RhbFRyaWdnZXIgaW4gY3VycmVudE9wZW4gJiYgY3VycmVudE9wZW5bbW9kYWxUcmlnZ2VyXVtzdHJpbmdNb2RhbF0uaGlkZSgpO1xuICAgICAgICAgIHN0cmluZ01vZGFsIGluIGN1cnJlbnRPcGVuICYmIGN1cnJlbnRPcGVuW3N0cmluZ01vZGFsXS5oaWRlKCk7XG4gICAgICAgIH1cbiAgXG4gICAgICAgIGlmICggc2VsZltiYWNrZHJvcF0gKSB7XG4gICAgICAgICAgIW1vZGFsT3ZlcmxheSAmJiAhb3ZlcmxheSAmJiBjcmVhdGVPdmVybGF5KCk7XG4gICAgICAgIH1cbiAgXG4gICAgICAgIGlmICggb3ZlcmxheSAmJiAhaGFzQ2xhc3Mob3ZlcmxheSxzaG93Q2xhc3MpICkge1xuICAgICAgICAgIG92ZXJsYXlbb2Zmc2V0V2lkdGhdOyAvLyBmb3JjZSByZWZsb3cgdG8gZW5hYmxlIHRyYXNpdGlvblxuICAgICAgICAgIG92ZXJsYXlEZWxheSA9IGdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KG92ZXJsYXkpO1xuICAgICAgICAgIGFkZENsYXNzKG92ZXJsYXksIHNob3dDbGFzcyk7XG4gICAgICAgIH1cbiAgXG4gICAgICAgIHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIG1vZGFsW3N0eWxlXS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgXG4gICAgICAgICAgY2hlY2tTY3JvbGxiYXIoKTtcbiAgICAgICAgICBzZXRTY3JvbGxiYXIoKTtcbiAgXG4gICAgICAgICAgYWRkQ2xhc3MoRE9DW2JvZHldLGNvbXBvbmVudCsnLW9wZW4nKTtcbiAgICAgICAgICBhZGRDbGFzcyhtb2RhbCxzaG93Q2xhc3MpO1xuICAgICAgICAgIG1vZGFsW3NldEF0dHJpYnV0ZV0oYXJpYUhpZGRlbiwgZmFsc2UpO1xuICBcbiAgICAgICAgICBoYXNDbGFzcyhtb2RhbCwnZmFkZScpID8gZW11bGF0ZVRyYW5zaXRpb25FbmQobW9kYWwsIHRyaWdnZXJTaG93KSA6IHRyaWdnZXJTaG93KCk7XG4gICAgICAgIH0sIHN1cHBvcnRUcmFuc2l0aW9ucyAmJiBvdmVybGF5ICYmIG92ZXJsYXlEZWxheSA/IG92ZXJsYXlEZWxheSA6IDEpO1xuICAgICAgfSwxKTtcbiAgICB9O1xuICAgIHRoaXMuaGlkZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCBtb2RhbFtpc0FuaW1hdGluZ10gfHwgIWhhc0NsYXNzKG1vZGFsLHNob3dDbGFzcykgKSB7cmV0dXJufVxuICBcbiAgICAgIGNsZWFyVGltZW91dChtb2RhbFRpbWVyKTtcbiAgICAgIG1vZGFsVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAgIG1vZGFsW2lzQW5pbWF0aW5nXSA9IHRydWU7ICAgIFxuICAgICAgICBib290c3RyYXBDdXN0b21FdmVudC5jYWxsKG1vZGFsLCBoaWRlRXZlbnQsIGNvbXBvbmVudCk7XG4gICAgICAgIG92ZXJsYXkgPSBxdWVyeUVsZW1lbnQoJy4nK21vZGFsQmFja2Ryb3BTdHJpbmcpO1xuICAgICAgICBvdmVybGF5RGVsYXkgPSBvdmVybGF5ICYmIGdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KG92ZXJsYXkpO1xuICBcbiAgICAgICAgcmVtb3ZlQ2xhc3MobW9kYWwsc2hvd0NsYXNzKTtcbiAgICAgICAgbW9kYWxbc2V0QXR0cmlidXRlXShhcmlhSGlkZGVuLCB0cnVlKTtcbiAgXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICBoYXNDbGFzcyhtb2RhbCwnZmFkZScpID8gZW11bGF0ZVRyYW5zaXRpb25FbmQobW9kYWwsIHRyaWdnZXJIaWRlKSA6IHRyaWdnZXJIaWRlKCk7XG4gICAgICAgIH0sIHN1cHBvcnRUcmFuc2l0aW9ucyAmJiBvdmVybGF5ICYmIG92ZXJsYXlEZWxheSA/IG92ZXJsYXlEZWxheSA6IDIpO1xuICAgICAgfSwyKVxuICAgIH07XG4gICAgdGhpcy5zZXRDb250ZW50ID0gZnVuY3Rpb24oIGNvbnRlbnQgKSB7XG4gICAgICBxdWVyeUVsZW1lbnQoJy4nK2NvbXBvbmVudCsnLWNvbnRlbnQnLG1vZGFsKVtpbm5lckhUTUxdID0gY29udGVudDtcbiAgICB9O1xuICAgIHRoaXMudXBkYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoaGFzQ2xhc3MobW9kYWwsc2hvd0NsYXNzKSkge1xuICAgICAgICBjaGVja1Njcm9sbGJhcigpO1xuICAgICAgICBzZXRTY3JvbGxiYXIoKTtcbiAgICAgIH1cbiAgICB9O1xuICBcbiAgICAvLyBpbml0XG4gICAgLy8gcHJldmVudCBhZGRpbmcgZXZlbnQgaGFuZGxlcnMgb3ZlciBhbmQgb3ZlclxuICAgIC8vIG1vZGFsIGlzIGluZGVwZW5kZW50IG9mIGEgdHJpZ2dlcmluZyBlbGVtZW50XG4gICAgaWYgKCAhIWVsZW1lbnQgJiYgIShzdHJpbmdNb2RhbCBpbiBlbGVtZW50KSApIHtcbiAgICAgIG9uKGVsZW1lbnQsIGNsaWNrRXZlbnQsIGNsaWNrSGFuZGxlcik7XG4gICAgfVxuICAgIGlmICggISFzZWxmW2NvbnRlbnRdICkgeyBzZWxmLnNldENvbnRlbnQoIHNlbGZbY29udGVudF0gKTsgfVxuICAgIGlmIChlbGVtZW50KSB7IGVsZW1lbnRbc3RyaW5nTW9kYWxdID0gc2VsZjsgbW9kYWxbbW9kYWxUcmlnZ2VyXSA9IGVsZW1lbnQ7IH1cbiAgICBlbHNlIHsgbW9kYWxbc3RyaW5nTW9kYWxdID0gc2VsZjsgfVxuICB9O1xuICBcbiAgLy8gREFUQSBBUElcbiAgc3VwcG9ydHNbcHVzaF0oIFsgc3RyaW5nTW9kYWwsIE1vZGFsLCAnWycrZGF0YVRvZ2dsZSsnPVwibW9kYWxcIl0nIF0gKTtcbiAgXG4gIFxyXG4gIC8qIE5hdGl2ZSBKYXZhc2NyaXB0IGZvciBCb290c3RyYXAgfCBJbml0aWFsaXplIERhdGEgQVBJXHJcbiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gIHZhciBpbml0aWFsaXplRGF0YUFQSSA9IGZ1bmN0aW9uKCBjb25zdHJ1Y3RvciwgY29sbGVjdGlvbiApe1xyXG4gICAgICBmb3IgKHZhciBpPTAsIGw9Y29sbGVjdGlvbltsZW5ndGhdOyBpPGw7IGkrKykge1xyXG4gICAgICAgIG5ldyBjb25zdHJ1Y3Rvcihjb2xsZWN0aW9uW2ldKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGluaXRDYWxsYmFjayA9IEJTTi5pbml0Q2FsbGJhY2sgPSBmdW5jdGlvbihsb29rVXApe1xyXG4gICAgICBsb29rVXAgPSBsb29rVXAgfHwgRE9DO1xyXG4gICAgICBmb3IgKHZhciBpPTAsIGw9c3VwcG9ydHNbbGVuZ3RoXTsgaTxsOyBpKyspIHtcclxuICAgICAgICBpbml0aWFsaXplRGF0YUFQSSggc3VwcG9ydHNbaV1bMV0sIGxvb2tVcFtxdWVyeVNlbGVjdG9yQWxsXSAoc3VwcG9ydHNbaV1bMl0pICk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgXHJcbiAgLy8gYnVsayBpbml0aWFsaXplIGFsbCBjb21wb25lbnRzXHJcbiAgRE9DW2JvZHldID8gaW5pdENhbGxiYWNrKCkgOiBvbiggRE9DLCAnRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCl7IGluaXRDYWxsYmFjaygpOyB9ICk7XHJcbiAgXG4gIHJldHVybiB7XG4gICAgTW9kYWw6IE1vZGFsXG4gIH07XG59KSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQSxxQkFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/bootstrap.native/lib/V4/modal-native.js\n");

/***/ }),

/***/ "./node_modules/lazysizes/lazysizes.js":
/*!*********************************************!*\
  !*** ./node_modules/lazysizes/lazysizes.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function(window, factory) {\n\tvar lazySizes = factory(window, window.document, Date);\n\twindow.lazySizes = lazySizes;\n\tif( true && module.exports){\n\t\tmodule.exports = lazySizes;\n\t}\n}(typeof window != 'undefined' ?\n      window : {}, function l(window, document, Date) { // Pass in the windoe Date function also for SSR because the Date class can be lost\n\t'use strict';\n\t/*jshint eqnull:true */\n\n\tvar lazysizes, lazySizesCfg;\n\n\t(function(){\n\t\tvar prop;\n\n\t\tvar lazySizesDefaults = {\n\t\t\tlazyClass: 'lazyload',\n\t\t\tloadedClass: 'lazyloaded',\n\t\t\tloadingClass: 'lazyloading',\n\t\t\tpreloadClass: 'lazypreload',\n\t\t\terrorClass: 'lazyerror',\n\t\t\t//strictClass: 'lazystrict',\n\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\tsrcAttr: 'data-src',\n\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\tsizesAttr: 'data-sizes',\n\t\t\t//preloadAfterLoad: false,\n\t\t\tminSize: 40,\n\t\t\tcustomMedia: {},\n\t\t\tinit: true,\n\t\t\texpFactor: 1.5,\n\t\t\thFac: 0.8,\n\t\t\tloadMode: 2,\n\t\t\tloadHidden: true,\n\t\t\tricTimeout: 0,\n\t\t\tthrottleDelay: 125,\n\t\t};\n\n\t\tlazySizesCfg = window.lazySizesConfig || window.lazysizesConfig || {};\n\n\t\tfor(prop in lazySizesDefaults){\n\t\t\tif(!(prop in lazySizesCfg)){\n\t\t\t\tlazySizesCfg[prop] = lazySizesDefaults[prop];\n\t\t\t}\n\t\t}\n\t})();\n\n\tif (!document || !document.getElementsByClassName) {\n\t\treturn {\n\t\t\tinit: function () {},\n\t\t\tcfg: lazySizesCfg,\n\t\t\tnoSupport: true,\n\t\t};\n\t}\n\n\tvar docElem = document.documentElement;\n\n\tvar supportPicture = window.HTMLPictureElement;\n\n\tvar _addEventListener = 'addEventListener';\n\n\tvar _getAttribute = 'getAttribute';\n\n\t/**\n\t * Update to bind to window because 'this' becomes null during SSR\n\t * builds.\n\t */\n\tvar addEventListener = window[_addEventListener].bind(window);\n\n\tvar setTimeout = window.setTimeout;\n\n\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n\tvar requestIdleCallback = window.requestIdleCallback;\n\n\tvar regPicture = /^picture$/i;\n\n\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\n\tvar regClassCache = {};\n\n\tvar forEach = Array.prototype.forEach;\n\n\tvar hasClass = function(ele, cls) {\n\t\tif(!regClassCache[cls]){\n\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t}\n\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t};\n\n\tvar addClass = function(ele, cls) {\n\t\tif (!hasClass(ele, cls)){\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t}\n\t};\n\n\tvar removeClass = function(ele, cls) {\n\t\tvar reg;\n\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t}\n\t};\n\n\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\tif(add){\n\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t}\n\t\tloadEvents.forEach(function(evt){\n\t\t\tdom[action](evt, fn);\n\t\t});\n\t};\n\n\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\tvar event = document.createEvent('Event');\n\n\t\tif(!detail){\n\t\t\tdetail = {};\n\t\t}\n\n\t\tdetail.instance = lazysizes;\n\n\t\tevent.initEvent(name, !noBubbles, !noCancelable);\n\n\t\tevent.detail = detail;\n\n\t\telem.dispatchEvent(event);\n\t\treturn event;\n\t};\n\n\tvar updatePolyfill = function (el, full){\n\t\tvar polyfill;\n\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesCfg.pf) ) ){\n\t\t\tif(full && full.src && !el[_getAttribute]('srcset')){\n\t\t\t\tel.setAttribute('srcset', full.src);\n\t\t\t}\n\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t} else if(full && full.src){\n\t\t\tel.src = full.src;\n\t\t}\n\t};\n\n\tvar getCSS = function (elem, style){\n\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t};\n\n\tvar getWidth = function(elem, parent, width){\n\t\twidth = width || elem.offsetWidth;\n\n\t\twhile(width < lazySizesCfg.minSize && parent && !elem._lazysizesWidth){\n\t\t\twidth =  parent.offsetWidth;\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tvar rAF = (function(){\n\t\tvar running, waiting;\n\t\tvar firstFns = [];\n\t\tvar secondFns = [];\n\t\tvar fns = firstFns;\n\n\t\tvar run = function(){\n\t\t\tvar runFns = fns;\n\n\t\t\tfns = firstFns.length ? secondFns : firstFns;\n\n\t\t\trunning = true;\n\t\t\twaiting = false;\n\n\t\t\twhile(runFns.length){\n\t\t\t\trunFns.shift()();\n\t\t\t}\n\n\t\t\trunning = false;\n\t\t};\n\n\t\tvar rafBatch = function(fn, queue){\n\t\t\tif(running && !queue){\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\tfns.push(fn);\n\n\t\t\t\tif(!waiting){\n\t\t\t\t\twaiting = true;\n\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trafBatch._lsFlush = run;\n\n\t\treturn rafBatch;\n\t})();\n\n\tvar rAFIt = function(fn, simple){\n\t\treturn simple ?\n\t\t\tfunction() {\n\t\t\t\trAF(fn);\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\trAF(function(){\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t});\n\t\t\t}\n\t\t;\n\t};\n\n\tvar throttle = function(fn){\n\t\tvar running;\n\t\tvar lastTime = 0;\n\t\tvar gDelay = lazySizesCfg.throttleDelay;\n\t\tvar rICTimeout = lazySizesCfg.ricTimeout;\n\t\tvar run = function(){\n\t\t\trunning = false;\n\t\t\tlastTime = Date.now();\n\t\t\tfn();\n\t\t};\n\t\tvar idleCallback = requestIdleCallback && rICTimeout > 49 ?\n\t\t\tfunction(){\n\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\n\t\t\t\tif(rICTimeout !== lazySizesCfg.ricTimeout){\n\t\t\t\t\trICTimeout = lazySizesCfg.ricTimeout;\n\t\t\t\t}\n\t\t\t} :\n\t\t\trAFIt(function(){\n\t\t\t\tsetTimeout(run);\n\t\t\t}, true)\n\t\t;\n\n\t\treturn function(isPriority){\n\t\t\tvar delay;\n\n\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\trICTimeout = 33;\n\t\t\t}\n\n\t\t\tif(running){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunning =  true;\n\n\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\n\t\t\tif(delay < 0){\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif(isPriority || delay < 9){\n\t\t\t\tidleCallback();\n\t\t\t} else {\n\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t}\n\t\t};\n\t};\n\n\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\tvar debounce = function(func) {\n\t\tvar timeout, timestamp;\n\t\tvar wait = 99;\n\t\tvar run = function(){\n\t\t\ttimeout = null;\n\t\t\tfunc();\n\t\t};\n\t\tvar later = function() {\n\t\t\tvar last = Date.now() - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t} else {\n\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t}\n\t\t};\n\n\t\treturn function() {\n\t\t\ttimestamp = Date.now();\n\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t}\n\t\t};\n\t};\n\n\tvar loader = (function(){\n\t\tvar preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\n\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom, isBodyHidden;\n\n\t\tvar regImg = /^img$/i;\n\t\tvar regIframe = /^iframe$/i;\n\n\t\tvar supportScroll = ('onscroll' in window) && !(/(gle|ing)bot/.test(navigator.userAgent));\n\n\t\tvar shrinkExpand = 0;\n\t\tvar currentExpand = 0;\n\n\t\tvar isLoading = 0;\n\t\tvar lowRuns = -1;\n\n\t\tvar resetPreloading = function(e){\n\t\t\tisLoading--;\n\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\tisLoading = 0;\n\t\t\t}\n\t\t};\n\n\t\tvar isVisible = function (elem) {\n\t\t\tif (isBodyHidden == null) {\n\t\t\t\tisBodyHidden = getCSS(document.body, 'visibility') == 'hidden';\n\t\t\t}\n\n\t\t\treturn isBodyHidden || !(getCSS(elem.parentNode, 'visibility') == 'hidden' && getCSS(elem, 'visibility') == 'hidden');\n\t\t};\n\n\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\tvar outerRect;\n\t\t\tvar parent = elem;\n\t\t\tvar visible = isVisible(elem);\n\n\t\t\teLtop -= elemExpand;\n\t\t\teLbottom += elemExpand;\n\t\t\teLleft -= elemExpand;\n\t\t\teLright += elemExpand;\n\n\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\n\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visible;\n\t\t};\n\n\t\tvar checkElements = function() {\n\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal,\n\t\t\t\tbeforeExpandVal, defaultExpand, preloadExpand, hFac;\n\t\t\tvar lazyloadElems = lazysizes.elements;\n\n\t\t\tif((loadMode = lazySizesCfg.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\n\t\t\t\ti = 0;\n\n\t\t\t\tlowRuns++;\n\n\t\t\t\tfor(; i < eLlen; i++){\n\n\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\n\t\t\t\t\tif(!supportScroll || (lazysizes.prematureUnveil && lazysizes.prematureUnveil(lazyloadElems[i]))){unveilElement(lazyloadElems[i]);continue;}\n\n\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!defaultExpand) {\n\t\t\t\t\t\tdefaultExpand = (!lazySizesCfg.expand || lazySizesCfg.expand < 1) ?\n\t\t\t\t\t\t\tdocElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370 :\n\t\t\t\t\t\t\tlazySizesCfg.expand;\n\n\t\t\t\t\t\tlazysizes._defEx = defaultExpand;\n\n\t\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesCfg.expFactor;\n\t\t\t\t\t\thFac = lazySizesCfg.hFac;\n\t\t\t\t\t\tisBodyHidden = null;\n\n\t\t\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){\n\t\t\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\t\t\tlowRuns = 0;\n\t\t\t\t\t\t} else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){\n\t\t\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\n\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t(lazySizesCfg.loadHidden || isVisible(lazyloadElems[i])) &&\n\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t(preloadElems[0] || lazySizesCfg.preloadAfterLoad) &&\n\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesCfg.sizesAttr) != 'auto')))){\n\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar throttledCheckElements = throttle(checkElements);\n\n\t\tvar switchLoadingClass = function(e){\n\t\t\tvar elem = e.target;\n\n\t\t\tif (elem._lazyCache) {\n\t\t\t\tdelete elem._lazyCache;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresetPreloading(e);\n\t\t\taddClass(elem, lazySizesCfg.loadedClass);\n\t\t\tremoveClass(elem, lazySizesCfg.loadingClass);\n\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass);\n\t\t\ttriggerEvent(elem, 'lazyloaded');\n\t\t};\n\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t};\n\n\t\tvar changeIframeSrc = function(elem, src){\n\t\t\ttry {\n\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t} catch(e){\n\t\t\t\telem.src = src;\n\t\t\t}\n\t\t};\n\n\t\tvar handleSources = function(source){\n\t\t\tvar customMedia;\n\n\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesCfg.srcsetAttr);\n\n\t\t\tif( (customMedia = lazySizesCfg.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t}\n\n\t\t\tif(sourceSrcset){\n\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t}\n\t\t};\n\n\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\n\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\n\t\t\t\tif(sizes){\n\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\taddClass(elem, lazySizesCfg.autosizesClass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsrcset = elem[_getAttribute](lazySizesCfg.srcsetAttr);\n\t\t\t\tsrc = elem[_getAttribute](lazySizesCfg.srcAttr);\n\n\t\t\t\tif(isImg) {\n\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t}\n\n\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\n\t\t\t\tevent = {target: elem};\n\n\t\t\t\taddClass(elem, lazySizesCfg.loadingClass);\n\n\t\t\t\tif(firesLoad){\n\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t}\n\n\t\t\t\tif(isPicture){\n\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t}\n\n\t\t\t\tif(srcset){\n\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isImg && (srcset || isPicture)){\n\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(elem._lazyRace){\n\t\t\t\tdelete elem._lazyRace;\n\t\t\t}\n\t\t\tremoveClass(elem, lazySizesCfg.lazyClass);\n\n\t\t\trAF(function(){\n\t\t\t\t// Part of this can be removed as soon as this fix is older: https://bugs.chromium.org/p/chromium/issues/detail?id=7731 (2015)\n\t\t\t\tvar isLoaded = elem.complete && elem.naturalWidth > 1;\n\n\t\t\t\tif( !firesLoad || isLoaded){\n\t\t\t\t\tif (isLoaded) {\n\t\t\t\t\t\taddClass(elem, 'ls-is-cached');\n\t\t\t\t\t}\n\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t\telem._lazyCache = true;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tif ('_lazyCache' in elem) {\n\t\t\t\t\t\t\tdelete elem._lazyCache;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 9);\n\t\t\t\t}\n\t\t\t\tif (elem.loading == 'lazy') {\n\t\t\t\t\tisLoading--;\n\t\t\t\t}\n\t\t\t}, true);\n\t\t});\n\n\t\tvar unveilElement = function (elem){\n\t\t\tif (elem._lazyRace) {return;}\n\t\t\tvar detail;\n\n\t\t\tvar isImg = regImg.test(elem.nodeName);\n\n\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesCfg.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\tvar isAuto = sizes == 'auto';\n\n\t\t\tif( (isAuto || !isCompleted) && isImg && (elem[_getAttribute]('src') || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesCfg.errorClass) && hasClass(elem, lazySizesCfg.lazyClass)){return;}\n\n\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\n\t\t\tif(isAuto){\n\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t}\n\n\t\t\telem._lazyRace = true;\n\t\t\tisLoading++;\n\n\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t};\n\n\t\tvar afterScroll = debounce(function(){\n\t\t\tlazySizesCfg.loadMode = 3;\n\t\t\tthrottledCheckElements();\n\t\t});\n\n\t\tvar altLoadmodeScrollListner = function(){\n\t\t\tif(lazySizesCfg.loadMode == 3){\n\t\t\t\tlazySizesCfg.loadMode = 2;\n\t\t\t}\n\t\t\tafterScroll();\n\t\t};\n\n\t\tvar onload = function(){\n\t\t\tif(isCompleted){return;}\n\t\t\tif(Date.now() - started < 999){\n\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tisCompleted = true;\n\n\t\t\tlazySizesCfg.loadMode = 3;\n\n\t\t\tthrottledCheckElements();\n\n\t\t\taddEventListener('scroll', altLoadmodeScrollListner, true);\n\t\t};\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tstarted = Date.now();\n\n\t\t\t\tlazysizes.elements = document.getElementsByClassName(lazySizesCfg.lazyClass);\n\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesCfg.lazyClass + ' ' + lazySizesCfg.preloadClass);\n\n\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('pageshow', function (e) {\n\t\t\t\t\tif (e.persisted) {\n\t\t\t\t\t\tvar loadingElements = document.querySelectorAll('.' + lazySizesCfg.loadingClass);\n\n\t\t\t\t\t\tif (loadingElements.length && loadingElements.forEach) {\n\t\t\t\t\t\t\trequestAnimationFrame(function () {\n\t\t\t\t\t\t\t\tloadingElements.forEach( function (img) {\n\t\t\t\t\t\t\t\t\tif (img.complete) {\n\t\t\t\t\t\t\t\t\t\tunveilElement(img);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t} else {\n\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t}\n\n\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\n\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend'].forEach(function(name){\n\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t});\n\n\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\tonload();\n\t\t\t\t} else {\n\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t}\n\n\t\t\t\tif(lazysizes.elements.length){\n\t\t\t\t\tcheckElements();\n\t\t\t\t\trAF._lsFlush();\n\t\t\t\t} else {\n\t\t\t\t\tthrottledCheckElements();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckElems: throttledCheckElements,\n\t\t\tunveil: unveilElement,\n\t\t\t_aLSL: altLoadmodeScrollListner,\n\t\t};\n\t})();\n\n\n\tvar autoSizer = (function(){\n\t\tvar autosizesElems;\n\n\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\tvar sources, i, len;\n\t\t\telem._lazysizesWidth = width;\n\t\t\twidth += 'px';\n\n\t\t\telem.setAttribute('sizes', width);\n\n\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!event.detail.dataAttr){\n\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t}\n\t\t});\n\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\tvar event;\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif(parent){\n\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\n\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\twidth = event.detail.width;\n\n\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar updateElementsSizes = function(){\n\t\t\tvar i;\n\t\t\tvar len = autosizesElems.length;\n\t\t\tif(len){\n\t\t\t\ti = 0;\n\n\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesCfg.autosizesClass);\n\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t},\n\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\tupdateElem: getSizeElement\n\t\t};\n\t})();\n\n\tvar init = function(){\n\t\tif(!init.i && document.getElementsByClassName){\n\t\t\tinit.i = true;\n\t\t\tautoSizer._();\n\t\t\tloader._();\n\t\t}\n\t};\n\n\tsetTimeout(function(){\n\t\tif(lazySizesCfg.init){\n\t\t\tinit();\n\t\t}\n\t});\n\n\tlazysizes = {\n\t\tcfg: lazySizesCfg,\n\t\tautoSizer: autoSizer,\n\t\tloader: loader,\n\t\tinit: init,\n\t\tuP: updatePolyfill,\n\t\taC: addClass,\n\t\trC: removeClass,\n\t\thC: hasClass,\n\t\tfire: triggerEvent,\n\t\tgW: getWidth,\n\t\trAF: rAF,\n\t};\n\n\treturn lazysizes;\n}\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/lazysizes/lazysizes.js\n");

/***/ }),

/***/ "./node_modules/lazysizes/plugins/unveilhooks/ls.unveilhooks.js":
/*!**********************************************************************!*\
  !*** ./node_modules/lazysizes/plugins/unveilhooks/ls.unveilhooks.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\nThis plugin extends lazySizes to lazyLoad:\nbackground images, videos/posters and scripts\n\nBackground-Image:\nFor background images, use data-bg attribute:\n<div class=\"lazyload\" data-bg=\"bg-img.jpg\"></div>\n\n Video:\n For video/audio use data-poster and preload=\"none\":\n <video class=\"lazyload\" preload=\"none\" data-poster=\"poster.jpg\" src=\"src.mp4\">\n <!-- sources -->\n </video>\n\n For video that plays automatically if in view:\n <video\n\tclass=\"lazyload\"\n\tpreload=\"none\"\n\tmuted=\"\"\n\tdata-autoplay=\"\"\n\tdata-poster=\"poster.jpg\"\n\tsrc=\"src.mp4\">\n</video>\n\n Scripts:\n For scripts use data-script:\n <div class=\"lazyload\" data-script=\"module-name.js\"></div>\n\n\n Script modules using require:\n For modules using require use data-require:\n <div class=\"lazyload\" data-require=\"module-name\"></div>\n*/\n\n(function(window, factory) {\n\tvar globalInstall = function(){\n\t\tfactory(window.lazySizes);\n\t\twindow.removeEventListener('lazyunveilread', globalInstall, true);\n\t};\n\n\tfactory = factory.bind(null, window, window.document);\n\n\tif( true && module.exports){\n\t\tfactory(__webpack_require__(/*! lazysizes */ \"./node_modules/lazysizes/lazysizes.js\"));\n\t} else if (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! lazysizes */ \"./node_modules/lazysizes/lazysizes.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}(window, function(window, document, lazySizes) {\n\t/*jshint eqnull:true */\n\t'use strict';\n\tvar bgLoad, regBgUrlEscape;\n\tvar uniqueUrls = {};\n\n\tif(document.addEventListener){\n\t\tregBgUrlEscape = /\\(|\\)|\\s|'/;\n\n\t\tbgLoad = function (url, cb){\n\t\t\tvar img = document.createElement('img');\n\t\t\timg.onload = function(){\n\t\t\t\timg.onload = null;\n\t\t\t\timg.onerror = null;\n\t\t\t\timg = null;\n\t\t\t\tcb();\n\t\t\t};\n\t\t\timg.onerror = img.onload;\n\n\t\t\timg.src = url;\n\n\t\t\tif(img && img.complete && img.onload){\n\t\t\t\timg.onload();\n\t\t\t}\n\t\t};\n\n\t\taddEventListener('lazybeforeunveil', function(e){\n\t\t\tif(e.detail.instance != lazySizes){return;}\n\n\t\t\tvar tmp, load, bg, poster;\n\t\t\tif(!e.defaultPrevented) {\n\n\t\t\t\tvar target = e.target;\n\n\t\t\t\tif(target.preload == 'none'){\n\t\t\t\t\ttarget.preload = target.getAttribute('data-preload') || 'auto';\n\t\t\t\t}\n\n\t\t\t\tif (target.getAttribute('data-autoplay') != null) {\n\t\t\t\t\tif (target.getAttribute('data-expand') && !target.autoplay) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\ttarget.play();\n\t\t\t\t\t\t} catch (er) {}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequestAnimationFrame(function () {\n\t\t\t\t\t\t\ttarget.setAttribute('data-expand', '-10');\n\t\t\t\t\t\t\tlazySizes.aC(target, lazySizes.cfg.lazyClass);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttmp = target.getAttribute('data-link');\n\t\t\t\tif(tmp){\n\t\t\t\t\taddStyleScript(tmp, true);\n\t\t\t\t}\n\n\t\t\t\t// handle data-script\n\t\t\t\ttmp = target.getAttribute('data-script');\n\t\t\t\tif(tmp){\n\t\t\t\t\taddStyleScript(tmp);\n\t\t\t\t}\n\n\t\t\t\t// handle data-require\n\t\t\t\ttmp = target.getAttribute('data-require');\n\t\t\t\tif(tmp){\n\t\t\t\t\tif(lazySizes.cfg.requireJs){\n\t\t\t\t\t\tlazySizes.cfg.requireJs([tmp]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddStyleScript(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// handle data-bg\n\t\t\t\tbg = target.getAttribute('data-bg');\n\t\t\t\tif (bg) {\n\t\t\t\t\te.detail.firesLoad = true;\n\t\t\t\t\tload = function(){\n\t\t\t\t\t\ttarget.style.backgroundImage = 'url(' + (regBgUrlEscape.test(bg) ? JSON.stringify(bg) : bg ) + ')';\n\t\t\t\t\t\te.detail.firesLoad = false;\n\t\t\t\t\t\tlazySizes.fire(target, '_lazyloaded', {}, true, true);\n\t\t\t\t\t};\n\n\t\t\t\t\tbgLoad(bg, load);\n\t\t\t\t}\n\n\t\t\t\t// handle data-poster\n\t\t\t\tposter = target.getAttribute('data-poster');\n\t\t\t\tif(poster){\n\t\t\t\t\te.detail.firesLoad = true;\n\t\t\t\t\tload = function(){\n\t\t\t\t\t\ttarget.poster = poster;\n\t\t\t\t\t\te.detail.firesLoad = false;\n\t\t\t\t\t\tlazySizes.fire(target, '_lazyloaded', {}, true, true);\n\t\t\t\t\t};\n\n\t\t\t\t\tbgLoad(poster, load);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}, false);\n\n\t}\n\n\tfunction addStyleScript(src, style){\n\t\tif(uniqueUrls[src]){\n\t\t\treturn;\n\t\t}\n\t\tvar elem = document.createElement(style ? 'link' : 'script');\n\t\tvar insertElem = document.getElementsByTagName('script')[0];\n\n\t\tif(style){\n\t\t\telem.rel = 'stylesheet';\n\t\t\telem.href = src;\n\t\t} else {\n\t\t\telem.src = src;\n\t\t}\n\t\tuniqueUrls[src] = true;\n\t\tuniqueUrls[elem.src || elem.href] = true;\n\t\tinsertElem.parentNode.insertBefore(elem, insertElem);\n\t}\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbGF6eXNpemVzL3BsdWdpbnMvdW52ZWlsaG9va3MvbHMudW52ZWlsaG9va3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGF6eXNpemVzL3BsdWdpbnMvdW52ZWlsaG9va3MvbHMudW52ZWlsaG9va3MuanM/MDkyZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBwbHVnaW4gZXh0ZW5kcyBsYXp5U2l6ZXMgdG8gbGF6eUxvYWQ6XG5iYWNrZ3JvdW5kIGltYWdlcywgdmlkZW9zL3Bvc3RlcnMgYW5kIHNjcmlwdHNcblxuQmFja2dyb3VuZC1JbWFnZTpcbkZvciBiYWNrZ3JvdW5kIGltYWdlcywgdXNlIGRhdGEtYmcgYXR0cmlidXRlOlxuPGRpdiBjbGFzcz1cImxhenlsb2FkXCIgZGF0YS1iZz1cImJnLWltZy5qcGdcIj48L2Rpdj5cblxuIFZpZGVvOlxuIEZvciB2aWRlby9hdWRpbyB1c2UgZGF0YS1wb3N0ZXIgYW5kIHByZWxvYWQ9XCJub25lXCI6XG4gPHZpZGVvIGNsYXNzPVwibGF6eWxvYWRcIiBwcmVsb2FkPVwibm9uZVwiIGRhdGEtcG9zdGVyPVwicG9zdGVyLmpwZ1wiIHNyYz1cInNyYy5tcDRcIj5cbiA8IS0tIHNvdXJjZXMgLS0+XG4gPC92aWRlbz5cblxuIEZvciB2aWRlbyB0aGF0IHBsYXlzIGF1dG9tYXRpY2FsbHkgaWYgaW4gdmlldzpcbiA8dmlkZW9cblx0Y2xhc3M9XCJsYXp5bG9hZFwiXG5cdHByZWxvYWQ9XCJub25lXCJcblx0bXV0ZWQ9XCJcIlxuXHRkYXRhLWF1dG9wbGF5PVwiXCJcblx0ZGF0YS1wb3N0ZXI9XCJwb3N0ZXIuanBnXCJcblx0c3JjPVwic3JjLm1wNFwiPlxuPC92aWRlbz5cblxuIFNjcmlwdHM6XG4gRm9yIHNjcmlwdHMgdXNlIGRhdGEtc2NyaXB0OlxuIDxkaXYgY2xhc3M9XCJsYXp5bG9hZFwiIGRhdGEtc2NyaXB0PVwibW9kdWxlLW5hbWUuanNcIj48L2Rpdj5cblxuXG4gU2NyaXB0IG1vZHVsZXMgdXNpbmcgcmVxdWlyZTpcbiBGb3IgbW9kdWxlcyB1c2luZyByZXF1aXJlIHVzZSBkYXRhLXJlcXVpcmU6XG4gPGRpdiBjbGFzcz1cImxhenlsb2FkXCIgZGF0YS1yZXF1aXJlPVwibW9kdWxlLW5hbWVcIj48L2Rpdj5cbiovXG5cbihmdW5jdGlvbih3aW5kb3csIGZhY3RvcnkpIHtcblx0dmFyIGdsb2JhbEluc3RhbGwgPSBmdW5jdGlvbigpe1xuXHRcdGZhY3Rvcnkod2luZG93LmxhenlTaXplcyk7XG5cdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xhenl1bnZlaWxyZWFkJywgZ2xvYmFsSW5zdGFsbCwgdHJ1ZSk7XG5cdH07XG5cblx0ZmFjdG9yeSA9IGZhY3RvcnkuYmluZChudWxsLCB3aW5kb3csIHdpbmRvdy5kb2N1bWVudCk7XG5cblx0aWYodHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cyl7XG5cdFx0ZmFjdG9yeShyZXF1aXJlKCdsYXp5c2l6ZXMnKSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcblx0XHRkZWZpbmUoWydsYXp5c2l6ZXMnXSwgZmFjdG9yeSk7XG5cdH0gZWxzZSBpZih3aW5kb3cubGF6eVNpemVzKSB7XG5cdFx0Z2xvYmFsSW5zdGFsbCgpO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsYXp5dW52ZWlscmVhZCcsIGdsb2JhbEluc3RhbGwsIHRydWUpO1xuXHR9XG59KHdpbmRvdywgZnVuY3Rpb24od2luZG93LCBkb2N1bWVudCwgbGF6eVNpemVzKSB7XG5cdC8qanNoaW50IGVxbnVsbDp0cnVlICovXG5cdCd1c2Ugc3RyaWN0Jztcblx0dmFyIGJnTG9hZCwgcmVnQmdVcmxFc2NhcGU7XG5cdHZhciB1bmlxdWVVcmxzID0ge307XG5cblx0aWYoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcil7XG5cdFx0cmVnQmdVcmxFc2NhcGUgPSAvXFwofFxcKXxcXHN8Jy87XG5cblx0XHRiZ0xvYWQgPSBmdW5jdGlvbiAodXJsLCBjYil7XG5cdFx0XHR2YXIgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG5cdFx0XHRpbWcub25sb2FkID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0aW1nLm9ubG9hZCA9IG51bGw7XG5cdFx0XHRcdGltZy5vbmVycm9yID0gbnVsbDtcblx0XHRcdFx0aW1nID0gbnVsbDtcblx0XHRcdFx0Y2IoKTtcblx0XHRcdH07XG5cdFx0XHRpbWcub25lcnJvciA9IGltZy5vbmxvYWQ7XG5cblx0XHRcdGltZy5zcmMgPSB1cmw7XG5cblx0XHRcdGlmKGltZyAmJiBpbWcuY29tcGxldGUgJiYgaW1nLm9ubG9hZCl7XG5cdFx0XHRcdGltZy5vbmxvYWQoKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0YWRkRXZlbnRMaXN0ZW5lcignbGF6eWJlZm9yZXVudmVpbCcsIGZ1bmN0aW9uKGUpe1xuXHRcdFx0aWYoZS5kZXRhaWwuaW5zdGFuY2UgIT0gbGF6eVNpemVzKXtyZXR1cm47fVxuXG5cdFx0XHR2YXIgdG1wLCBsb2FkLCBiZywgcG9zdGVyO1xuXHRcdFx0aWYoIWUuZGVmYXVsdFByZXZlbnRlZCkge1xuXG5cdFx0XHRcdHZhciB0YXJnZXQgPSBlLnRhcmdldDtcblxuXHRcdFx0XHRpZih0YXJnZXQucHJlbG9hZCA9PSAnbm9uZScpe1xuXHRcdFx0XHRcdHRhcmdldC5wcmVsb2FkID0gdGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1wcmVsb2FkJykgfHwgJ2F1dG8nO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYXV0b3BsYXknKSAhPSBudWxsKSB7XG5cdFx0XHRcdFx0aWYgKHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZXhwYW5kJykgJiYgIXRhcmdldC5hdXRvcGxheSkge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0dGFyZ2V0LnBsYXkoKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVyKSB7fVxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0XHR0YXJnZXQuc2V0QXR0cmlidXRlKCdkYXRhLWV4cGFuZCcsICctMTAnKTtcblx0XHRcdFx0XHRcdFx0bGF6eVNpemVzLmFDKHRhcmdldCwgbGF6eVNpemVzLmNmZy5sYXp5Q2xhc3MpO1xuXHRcdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0dG1wID0gdGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1saW5rJyk7XG5cdFx0XHRcdGlmKHRtcCl7XG5cdFx0XHRcdFx0YWRkU3R5bGVTY3JpcHQodG1wLCB0cnVlKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIGhhbmRsZSBkYXRhLXNjcmlwdFxuXHRcdFx0XHR0bXAgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLXNjcmlwdCcpO1xuXHRcdFx0XHRpZih0bXApe1xuXHRcdFx0XHRcdGFkZFN0eWxlU2NyaXB0KHRtcCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBoYW5kbGUgZGF0YS1yZXF1aXJlXG5cdFx0XHRcdHRtcCA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcmVxdWlyZScpO1xuXHRcdFx0XHRpZih0bXApe1xuXHRcdFx0XHRcdGlmKGxhenlTaXplcy5jZmcucmVxdWlyZUpzKXtcblx0XHRcdFx0XHRcdGxhenlTaXplcy5jZmcucmVxdWlyZUpzKFt0bXBdKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0YWRkU3R5bGVTY3JpcHQodG1wKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBoYW5kbGUgZGF0YS1iZ1xuXHRcdFx0XHRiZyA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYmcnKTtcblx0XHRcdFx0aWYgKGJnKSB7XG5cdFx0XHRcdFx0ZS5kZXRhaWwuZmlyZXNMb2FkID0gdHJ1ZTtcblx0XHRcdFx0XHRsb2FkID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0XHRcdHRhcmdldC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAndXJsKCcgKyAocmVnQmdVcmxFc2NhcGUudGVzdChiZykgPyBKU09OLnN0cmluZ2lmeShiZykgOiBiZyApICsgJyknO1xuXHRcdFx0XHRcdFx0ZS5kZXRhaWwuZmlyZXNMb2FkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRsYXp5U2l6ZXMuZmlyZSh0YXJnZXQsICdfbGF6eWxvYWRlZCcsIHt9LCB0cnVlLCB0cnVlKTtcblx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0YmdMb2FkKGJnLCBsb2FkKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIGhhbmRsZSBkYXRhLXBvc3RlclxuXHRcdFx0XHRwb3N0ZXIgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLXBvc3RlcicpO1xuXHRcdFx0XHRpZihwb3N0ZXIpe1xuXHRcdFx0XHRcdGUuZGV0YWlsLmZpcmVzTG9hZCA9IHRydWU7XG5cdFx0XHRcdFx0bG9hZCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHR0YXJnZXQucG9zdGVyID0gcG9zdGVyO1xuXHRcdFx0XHRcdFx0ZS5kZXRhaWwuZmlyZXNMb2FkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRsYXp5U2l6ZXMuZmlyZSh0YXJnZXQsICdfbGF6eWxvYWRlZCcsIHt9LCB0cnVlLCB0cnVlKTtcblx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0YmdMb2FkKHBvc3RlciwgbG9hZCk7XG5cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sIGZhbHNlKTtcblxuXHR9XG5cblx0ZnVuY3Rpb24gYWRkU3R5bGVTY3JpcHQoc3JjLCBzdHlsZSl7XG5cdFx0aWYodW5pcXVlVXJsc1tzcmNdKXtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0dmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHN0eWxlID8gJ2xpbmsnIDogJ3NjcmlwdCcpO1xuXHRcdHZhciBpbnNlcnRFbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO1xuXG5cdFx0aWYoc3R5bGUpe1xuXHRcdFx0ZWxlbS5yZWwgPSAnc3R5bGVzaGVldCc7XG5cdFx0XHRlbGVtLmhyZWYgPSBzcmM7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc3JjID0gc3JjO1xuXHRcdH1cblx0XHR1bmlxdWVVcmxzW3NyY10gPSB0cnVlO1xuXHRcdHVuaXF1ZVVybHNbZWxlbS5zcmMgfHwgZWxlbS5ocmVmXSA9IHRydWU7XG5cdFx0aW5zZXJ0RWxlbS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtLCBpbnNlcnRFbGVtKTtcblx0fVxufSkpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBLFVBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/lazysizes/plugins/unveilhooks/ls.unveilhooks.js\n");

/***/ }),

/***/ "./node_modules/scroll-behavior-polyfill/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/scroll-behavior-polyfill/dist/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function () {\n    'use strict';\n\n    var UNSUPPORTED_ENVIRONMENT = typeof window === \"undefined\";\n\n    /**\n     * Is true if the browser natively supports the 'scroll-behavior' CSS-property.\n     * @type {boolean}\n     */\n    var SUPPORTS_SCROLL_BEHAVIOR = UNSUPPORTED_ENVIRONMENT ? false : \"scrollBehavior\" in document.documentElement.style;\n\n    \n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\n\n    function getScrollingElement() {\n        if (document.scrollingElement != null) {\n            return document.scrollingElement;\n        }\n        else {\n            return document.documentElement;\n        }\n    }\n\n    var STYLE_ATTRIBUTE_PROPERTY_NAME = \"scroll-behavior\";\n    var STYLE_ATTRIBUTE_PROPERTY_REGEXP = new RegExp(STYLE_ATTRIBUTE_PROPERTY_NAME + \":\\\\s*([^;]*)\");\n    /**\n     * Given an Element, this function appends the given ScrollBehavior CSS property value to the elements' 'style' attribute.\n     * If it doesnt already have one, it will add it.\n     * @param {Element} element\n     * @param {ScrollBehavior} behavior\n     */\n    function appendScrollBehaviorToStyleAttribute(element, behavior) {\n        var addition = STYLE_ATTRIBUTE_PROPERTY_NAME + \":\" + behavior;\n        var attributeValue = element.getAttribute(\"style\");\n        if (attributeValue == null || attributeValue === \"\") {\n            element.setAttribute(\"style\", addition);\n            return;\n        }\n        // The style attribute may already include a 'scroll-behavior:<something>' in which case that should be replaced\n        var existingValueForProperty = parseScrollBehaviorFromStyleAttribute(element);\n        if (existingValueForProperty != null) {\n            var replacementProperty = STYLE_ATTRIBUTE_PROPERTY_NAME + \":\" + existingValueForProperty;\n            // Replace the variant that ends with a semi-colon which it may\n            attributeValue = attributeValue.replace(replacementProperty + \";\", \"\");\n            // Replace the variant that *doesn't* end with a semi-colon\n            attributeValue = attributeValue.replace(replacementProperty, \"\");\n        }\n        // Now, append the behavior to the string.\n        element.setAttribute(\"style\", attributeValue.endsWith(\";\") ? \"\" + attributeValue + addition : \";\" + attributeValue + addition);\n    }\n    /**\n     * Given an Element, this function attempts to parse its 'style' attribute (if it has one)' to extract\n     * a value for the 'scroll-behavior' CSS property (if it is given within that style attribute)\n     * @param {Element} element\n     * @returns {ScrollBehavior?}\n     */\n    function parseScrollBehaviorFromStyleAttribute(element) {\n        var styleAttributeValue = element.getAttribute(\"style\");\n        if (styleAttributeValue != null && styleAttributeValue.includes(STYLE_ATTRIBUTE_PROPERTY_NAME)) {\n            var match = styleAttributeValue.match(STYLE_ATTRIBUTE_PROPERTY_REGEXP);\n            if (match != null) {\n                var _a = __read(match, 2), behavior = _a[1];\n                if (behavior != null && behavior !== \"\") {\n                    return behavior;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    var styleDeclarationPropertyName = \"scrollBehavior\";\n    /**\n     * Determines the scroll behavior to use, depending on the given ScrollOptions and the position of the Element\n     * within the DOM\n     * @param {Element|HTMLElement|Window} inputTarget\n     * @param {ScrollOptions} [options]\n     * @returns {ScrollBehavior}\n     */\n    function getScrollBehavior(inputTarget, options) {\n        // If the given 'behavior' is 'smooth', apply smooth scrolling no matter what\n        if (options != null && options.behavior === \"smooth\")\n            return \"smooth\";\n        var target = \"style\" in inputTarget ? inputTarget : getScrollingElement();\n        var value;\n        if (\"style\" in target) {\n            // Check if scroll-behavior is set as a property on the CSSStyleDeclaration\n            var scrollBehaviorPropertyValue = target.style[styleDeclarationPropertyName];\n            // Return it if it is given and has a proper value\n            if (scrollBehaviorPropertyValue != null && scrollBehaviorPropertyValue !== \"\") {\n                value = scrollBehaviorPropertyValue;\n            }\n        }\n        if (value == null) {\n            var attributeValue = target.getAttribute(\"scroll-behavior\");\n            if (attributeValue != null && attributeValue !== \"\") {\n                value = attributeValue;\n            }\n        }\n        if (value == null) {\n            // Otherwise, check if it is set as an inline style\n            value = parseScrollBehaviorFromStyleAttribute(target);\n        }\n        if (value == null) {\n            // Take the computed style for the element and see if it contains a specific 'scroll-behavior' value\n            var computedStyle = getComputedStyle(target);\n            var computedStyleValue = computedStyle.getPropertyValue(\"scrollBehavior\");\n            if (computedStyleValue != null && computedStyleValue !== \"\") {\n                value = computedStyleValue;\n            }\n        }\n        // In all other cases, use the value from the CSSOM\n        return value;\n    }\n\n    \n\n    \n\n    var HALF = 0.5;\n    /**\n     * The easing function to use when applying the smooth scrolling\n     * @param {number} k\n     * @returns {number}\n     */\n    function ease(k) {\n        return HALF * (1 - Math.cos(Math.PI * k));\n    }\n\n    var NOOP = {\n        reset: function () { }\n    };\n    var map = typeof WeakMap === \"undefined\" ? undefined : new WeakMap();\n    function disableScrollSnap(scroller) {\n        // If scroll-behavior is natively supported, or if there is no native WeakMap support, there's no need for this fix\n        if (SUPPORTS_SCROLL_BEHAVIOR || map == null) {\n            return NOOP;\n        }\n        var scrollingElement = getScrollingElement();\n        var cachedScrollSnapValue;\n        var cachedScrollBehaviorStyleAttributeValue;\n        var secondaryScroller;\n        var secondaryScrollerCachedScrollSnapValue;\n        var secondaryScrollerCachedScrollBehaviorStyleAttributeValue;\n        var existingResult = map.get(scroller);\n        if (existingResult != null) {\n            cachedScrollSnapValue = existingResult.cachedScrollSnapValue;\n            cachedScrollBehaviorStyleAttributeValue = existingResult.cachedScrollBehaviorStyleAttributeValue;\n            secondaryScroller = existingResult.secondaryScroller;\n            secondaryScrollerCachedScrollSnapValue = existingResult.secondaryScrollerCachedScrollSnapValue;\n            secondaryScrollerCachedScrollBehaviorStyleAttributeValue = existingResult.secondaryScrollerCachedScrollBehaviorStyleAttributeValue;\n            existingResult.release();\n        }\n        else {\n            cachedScrollSnapValue = scroller.style.scrollSnapType === \"\" ? null : scroller.style.scrollSnapType;\n            cachedScrollBehaviorStyleAttributeValue = parseScrollBehaviorFromStyleAttribute(scroller);\n            secondaryScroller = scroller === scrollingElement && scrollingElement !== document.body ? document.body : undefined;\n            secondaryScrollerCachedScrollSnapValue =\n                secondaryScroller == null ? undefined : secondaryScroller.style.scrollSnapType === \"\" ? null : secondaryScroller.style.scrollSnapType;\n            secondaryScrollerCachedScrollBehaviorStyleAttributeValue =\n                secondaryScroller == null ? undefined : parseScrollBehaviorFromStyleAttribute(secondaryScroller);\n            var cachedComputedScrollSnapValue = getComputedStyle(scroller).getPropertyValue(\"scroll-snap-type\");\n            var secondaryScrollerCachedComputedScrollSnapValue = secondaryScroller == null ? undefined : getComputedStyle(secondaryScroller).getPropertyValue(\"scroll-snap-type\");\n            // If it just so happens that there actually isn't any scroll snapping going on, there's no point in performing any additional work here.\n            if (cachedComputedScrollSnapValue === \"none\" && secondaryScrollerCachedComputedScrollSnapValue === \"none\") {\n                return NOOP;\n            }\n        }\n        scroller.style.scrollSnapType = \"none\";\n        if (secondaryScroller !== undefined) {\n            secondaryScroller.style.scrollSnapType = \"none\";\n        }\n        if (cachedScrollBehaviorStyleAttributeValue !== undefined) {\n            appendScrollBehaviorToStyleAttribute(scroller, cachedScrollBehaviorStyleAttributeValue);\n        }\n        if (secondaryScroller !== undefined && secondaryScrollerCachedScrollBehaviorStyleAttributeValue !== undefined) {\n            appendScrollBehaviorToStyleAttribute(secondaryScroller, secondaryScrollerCachedScrollBehaviorStyleAttributeValue);\n        }\n        var hasReleased = false;\n        var eventTarget = scroller === scrollingElement ? window : scroller;\n        function release() {\n            eventTarget.removeEventListener(\"scroll\", resetHandler);\n            if (map != null) {\n                map[\"delete\"](scroller);\n            }\n            hasReleased = true;\n        }\n        function resetHandler() {\n            scroller.style.scrollSnapType = cachedScrollSnapValue;\n            if (secondaryScroller != null && secondaryScrollerCachedScrollSnapValue !== undefined) {\n                secondaryScroller.style.scrollSnapType = secondaryScrollerCachedScrollSnapValue;\n            }\n            if (cachedScrollBehaviorStyleAttributeValue !== undefined) {\n                appendScrollBehaviorToStyleAttribute(scroller, cachedScrollBehaviorStyleAttributeValue);\n            }\n            if (secondaryScroller !== undefined && secondaryScrollerCachedScrollBehaviorStyleAttributeValue !== undefined) {\n                appendScrollBehaviorToStyleAttribute(secondaryScroller, secondaryScrollerCachedScrollBehaviorStyleAttributeValue);\n            }\n            release();\n        }\n        function reset() {\n            setTimeout(function () {\n                if (hasReleased)\n                    return;\n                eventTarget.addEventListener(\"scroll\", resetHandler);\n            });\n        }\n        map.set(scroller, {\n            release: release,\n            cachedScrollSnapValue: cachedScrollSnapValue,\n            cachedScrollBehaviorStyleAttributeValue: cachedScrollBehaviorStyleAttributeValue,\n            secondaryScroller: secondaryScroller,\n            secondaryScrollerCachedScrollSnapValue: secondaryScrollerCachedScrollSnapValue,\n            secondaryScrollerCachedScrollBehaviorStyleAttributeValue: secondaryScrollerCachedScrollBehaviorStyleAttributeValue\n        });\n        return {\n            reset: reset\n        };\n    }\n\n    /**\n     * The duration of a smooth scroll\n     * @type {number}\n     */\n    var SCROLL_TIME = 15000;\n    /**\n     * Performs a smooth repositioning of the scroll\n     * @param {ISmoothScrollOptions} options\n     */\n    function smoothScroll(options) {\n        var startTime = options.startTime, startX = options.startX, startY = options.startY, endX = options.endX, endY = options.endY, method = options.method, scroller = options.scroller;\n        var timeLapsed = 0;\n        var distanceX = endX - startX;\n        var distanceY = endY - startY;\n        var speed = Math.max(Math.abs((distanceX / 1000) * SCROLL_TIME), Math.abs((distanceY / 1000) * SCROLL_TIME));\n        // Temporarily disables any scroll snapping that may be active since it fights for control over the scroller with this polyfill\n        var scrollSnapFix = disableScrollSnap(scroller);\n        requestAnimationFrame(function animate(timestamp) {\n            timeLapsed += timestamp - startTime;\n            var percentage = Math.max(0, Math.min(1, speed === 0 ? 0 : timeLapsed / speed));\n            var positionX = Math.floor(startX + distanceX * ease(percentage));\n            var positionY = Math.floor(startY + distanceY * ease(percentage));\n            method(positionX, positionY);\n            if (positionX !== endX || positionY !== endY) {\n                requestAnimationFrame(animate);\n            }\n            else {\n                if (scrollSnapFix != null) {\n                    scrollSnapFix.reset();\n                    scrollSnapFix = undefined;\n                }\n            }\n        });\n    }\n\n    /**\n     * Returns a High Resolution timestamp if possible, otherwise fallbacks to Date.now()\n     * @returns {number}\n     */\n    function now() {\n        if (\"performance\" in window)\n            return performance.now();\n        return Date.now();\n    }\n\n    \n\n    var ELEMENT_ORIGINAL_SCROLL = UNSUPPORTED_ENVIRONMENT ? undefined : Element.prototype.scroll;\n\n    var WINDOW_ORIGINAL_SCROLL = UNSUPPORTED_ENVIRONMENT ? undefined : window.scroll;\n\n    var ELEMENT_ORIGINAL_SCROLL_BY = UNSUPPORTED_ENVIRONMENT ? undefined : Element.prototype.scrollBy;\n\n    var WINDOW_ORIGINAL_SCROLL_BY = UNSUPPORTED_ENVIRONMENT ? undefined : window.scrollBy;\n\n    var ELEMENT_ORIGINAL_SCROLL_TO = UNSUPPORTED_ENVIRONMENT ? undefined : Element.prototype.scrollTo;\n\n    var WINDOW_ORIGINAL_SCROLL_TO = UNSUPPORTED_ENVIRONMENT ? undefined : window.scrollTo;\n\n    /**\n     * A fallback if Element.prototype.scroll is not defined\n     * @param {number} x\n     * @param {number} y\n     */\n    function elementPrototypeScrollFallback(x, y) {\n        this.__adjustingScrollPosition = true;\n        this.scrollLeft = x;\n        this.scrollTop = y;\n        delete this.__adjustingScrollPosition;\n    }\n    /**\n     * A fallback if Element.prototype.scrollTo is not defined\n     * @param {number} x\n     * @param {number} y\n     */\n    function elementPrototypeScrollToFallback(x, y) {\n        return elementPrototypeScrollFallback.call(this, x, y);\n    }\n    /**\n     * A fallback if Element.prototype.scrollBy is not defined\n     * @param {number} x\n     * @param {number} y\n     */\n    function elementPrototypeScrollByFallback(x, y) {\n        this.__adjustingScrollPosition = true;\n        this.scrollLeft += x;\n        this.scrollTop += y;\n        delete this.__adjustingScrollPosition;\n    }\n    /**\n     * Gets the original non-patched prototype method for the given kind\n     * @param {ScrollMethodName} kind\n     * @param {Element|Window} element\n     * @return {Function}\n     */\n    function getOriginalScrollMethodForKind(kind, element) {\n        switch (kind) {\n            case \"scroll\":\n                if (element instanceof Element) {\n                    if (ELEMENT_ORIGINAL_SCROLL != null) {\n                        return ELEMENT_ORIGINAL_SCROLL;\n                    }\n                    else {\n                        return elementPrototypeScrollFallback;\n                    }\n                }\n                else {\n                    return WINDOW_ORIGINAL_SCROLL;\n                }\n            case \"scrollBy\":\n                if (element instanceof Element) {\n                    if (ELEMENT_ORIGINAL_SCROLL_BY != null) {\n                        return ELEMENT_ORIGINAL_SCROLL_BY;\n                    }\n                    else {\n                        return elementPrototypeScrollByFallback;\n                    }\n                }\n                else {\n                    return WINDOW_ORIGINAL_SCROLL_BY;\n                }\n            case \"scrollTo\":\n                if (element instanceof Element) {\n                    if (ELEMENT_ORIGINAL_SCROLL_TO != null) {\n                        return ELEMENT_ORIGINAL_SCROLL_TO;\n                    }\n                    else {\n                        return elementPrototypeScrollToFallback;\n                    }\n                }\n                else {\n                    return WINDOW_ORIGINAL_SCROLL_TO;\n                }\n        }\n    }\n\n    /**\n     * Gets the Smooth Scroll Options to use for the step function\n     * @param {Element|Window} element\n     * @param {number} x\n     * @param {number} y\n     * @param {ScrollMethodName} kind\n     * @returns {ISmoothScrollOptions}\n     */\n    function getSmoothScrollOptions(element, x, y, kind) {\n        var startTime = now();\n        if (!(element instanceof Element)) {\n            // Use window as the scroll container\n            var scrollX_1 = window.scrollX, pageXOffset_1 = window.pageXOffset, scrollY_1 = window.scrollY, pageYOffset_1 = window.pageYOffset;\n            var startX = scrollX_1 == null || scrollX_1 === 0 ? pageXOffset_1 : scrollX_1;\n            var startY = scrollY_1 == null || scrollY_1 === 0 ? pageYOffset_1 : scrollY_1;\n            return {\n                startTime: startTime,\n                startX: startX,\n                startY: startY,\n                endX: Math.floor(kind === \"scrollBy\" ? startX + x : x),\n                endY: Math.floor(kind === \"scrollBy\" ? startY + y : y),\n                method: getOriginalScrollMethodForKind(\"scrollTo\", window).bind(window),\n                scroller: getScrollingElement()\n            };\n        }\n        else {\n            var scrollLeft = element.scrollLeft, scrollTop = element.scrollTop;\n            var startX = scrollLeft;\n            var startY = scrollTop;\n            return {\n                startTime: startTime,\n                startX: startX,\n                startY: startY,\n                endX: Math.floor(kind === \"scrollBy\" ? startX + x : x),\n                endY: Math.floor(kind === \"scrollBy\" ? startY + y : y),\n                method: getOriginalScrollMethodForKind(\"scrollTo\", element).bind(element),\n                scroller: element\n            };\n        }\n    }\n\n    /**\n     * Ensures that the given value is numeric\n     * @param {number} value\n     * @return {number}\n     */\n    function ensureNumeric(value) {\n        if (value == null)\n            return 0;\n        else if (typeof value === \"number\") {\n            return value;\n        }\n        else if (typeof value === \"string\") {\n            return parseFloat(value);\n        }\n        else {\n            return 0;\n        }\n    }\n\n    /**\n     * Returns true if the given value is some ScrollToOptions\n     * @param {number | ScrollToOptions} value\n     * @return {value is ScrollToOptions}\n     */\n    function isScrollToOptions(value) {\n        return value != null && typeof value === \"object\";\n    }\n\n    /**\n     * Handles a scroll method\n     * @param {Element|Window} element\n     * @param {ScrollMethodName} kind\n     * @param {number | ScrollToOptions} optionsOrX\n     * @param {number} y\n     */\n    function handleScrollMethod(element, kind, optionsOrX, y) {\n        onScrollWithOptions(getScrollToOptionsWithValidation(optionsOrX, y), element, kind);\n    }\n    /**\n     * Invoked when a 'ScrollToOptions' dict is provided to 'scroll()' as the first argument\n     * @param {ScrollToOptions} options\n     * @param {Element|Window} element\n     * @param {ScrollMethodName} kind\n     */\n    function onScrollWithOptions(options, element, kind) {\n        var behavior = getScrollBehavior(element, options);\n        // If the behavior is 'auto' apply instantaneous scrolling\n        if (behavior == null || behavior === \"auto\") {\n            getOriginalScrollMethodForKind(kind, element).call(element, options.left, options.top);\n        }\n        else {\n            smoothScroll(getSmoothScrollOptions(element, options.left, options.top, kind));\n        }\n    }\n    /**\n     * Normalizes the given scroll coordinates\n     * @param {number?} x\n     * @param {number?} y\n     * @return {Required<Pick<ScrollToOptions, \"top\" | \"left\">>}\n     */\n    function normalizeScrollCoordinates(x, y) {\n        return {\n            left: ensureNumeric(x),\n            top: ensureNumeric(y)\n        };\n    }\n    /**\n     * Gets ScrollToOptions based on the given arguments. Will throw if validation fails\n     * @param {number | ScrollToOptions} optionsOrX\n     * @param {number} y\n     * @return {Required<ScrollToOptions>}\n     */\n    function getScrollToOptionsWithValidation(optionsOrX, y) {\n        // If only one argument is given, and it isn't an options object, throw a TypeError\n        if (y === undefined && !isScrollToOptions(optionsOrX)) {\n            throw new TypeError(\"Failed to execute 'scroll' on 'Element': parameter 1 ('options') is not an object.\");\n        }\n        // Scroll based on the primitive values given as arguments\n        if (!isScrollToOptions(optionsOrX)) {\n            return __assign(__assign({}, normalizeScrollCoordinates(optionsOrX, y)), { behavior: \"auto\" });\n        }\n        // Scroll based on the received options object\n        else {\n            return __assign(__assign({}, normalizeScrollCoordinates(optionsOrX.left, optionsOrX.top)), { behavior: optionsOrX.behavior == null ? \"auto\" : optionsOrX.behavior });\n        }\n    }\n\n    /**\n     * Patches the 'scroll' method on the Element prototype\n     */\n    function patchElementScroll() {\n        Element.prototype.scroll = function (optionsOrX, y) {\n            handleScrollMethod(this, \"scroll\", optionsOrX, y);\n        };\n    }\n\n    /**\n     * Patches the 'scrollBy' method on the Element prototype\n     */\n    function patchElementScrollBy() {\n        Element.prototype.scrollBy = function (optionsOrX, y) {\n            handleScrollMethod(this, \"scrollBy\", optionsOrX, y);\n        };\n    }\n\n    /**\n     * Patches the 'scrollTo' method on the Element prototype\n     */\n    function patchElementScrollTo() {\n        Element.prototype.scrollTo = function (optionsOrX, y) {\n            handleScrollMethod(this, \"scrollTo\", optionsOrX, y);\n        };\n    }\n\n    /**\n     * Patches the 'scroll' method on the Window prototype\n     */\n    function patchWindowScroll() {\n        window.scroll = function (optionsOrX, y) {\n            handleScrollMethod(this, \"scroll\", optionsOrX, y);\n        };\n    }\n\n    /**\n     * Patches the 'scrollBy' method on the Window prototype\n     */\n    function patchWindowScrollBy() {\n        window.scrollBy = function (optionsOrX, y) {\n            handleScrollMethod(this, \"scrollBy\", optionsOrX, y);\n        };\n    }\n\n    /**\n     * Patches the 'scrollTo' method on the Window prototype\n     */\n    function patchWindowScrollTo() {\n        window.scrollTo = function (optionsOrX, y) {\n            handleScrollMethod(this, \"scrollTo\", optionsOrX, y);\n        };\n    }\n\n    // tslint:disable:no-any\n    /**\n     * Gets the parent of an element, taking into account DocumentFragments, ShadowRoots, as well as the root context (window)\n     * @param {EventTarget} currentElement\n     * @returns {EventTarget | null}\n     */\n    function getParent(currentElement) {\n        if (\"nodeType\" in currentElement && currentElement.nodeType === 1) {\n            return currentElement.parentNode;\n        }\n        if (\"ShadowRoot\" in window && currentElement instanceof window.ShadowRoot) {\n            return currentElement.host;\n        }\n        else if (currentElement === document) {\n            return window;\n        }\n        else if (currentElement instanceof Node)\n            return currentElement.parentNode;\n        return null;\n    }\n\n    /**\n     * Returns true if the given overflow property represents a scrollable overflow value\n     * @param {string | null} overflow\n     * @return {boolean}\n     */\n    function canOverflow(overflow) {\n        return overflow !== \"visible\" && overflow !== \"clip\";\n    }\n    /**\n     * Returns true if the given element is scrollable\n     * @param {Element} element\n     * @return {boolean}\n     */\n    function isScrollable(element) {\n        if (element.clientHeight < element.scrollHeight || element.clientWidth < element.scrollWidth) {\n            var style = getComputedStyle(element, null);\n            return canOverflow(style.overflowY) || canOverflow(style.overflowX);\n        }\n        return false;\n    }\n    /**\n     * Finds the nearest ancestor of an element that can scroll\n     * @param {Element} target\n     * @returns {Element|Window?}\n     */\n    function findNearestAncestorsWithScrollBehavior(target) {\n        var currentElement = target;\n        var scrollingElement = getScrollingElement();\n        while (currentElement != null) {\n            var behavior = getScrollBehavior(currentElement);\n            if (behavior != null && (currentElement === scrollingElement || isScrollable(currentElement))) {\n                return [currentElement, behavior];\n            }\n            var parent_1 = getParent(currentElement);\n            currentElement = parent_1;\n        }\n        // No such element could be found. Start over, but this time find the nearest ancestor that can simply scroll\n        currentElement = target;\n        while (currentElement != null) {\n            if (currentElement === scrollingElement || isScrollable(currentElement)) {\n                return [currentElement, \"auto\"];\n            }\n            var parent_2 = getParent(currentElement);\n            currentElement = parent_2;\n        }\n        // Default to the scrolling element\n        return [scrollingElement, \"auto\"];\n    }\n\n    // tslint:disable:no-any\n    /**\n     * Finds the nearest root from an element\n     * @param {Element} target\n     * @returns {Document|ShadowRoot}\n     */\n    function findNearestRoot(target) {\n        var currentElement = target;\n        while (currentElement != null) {\n            if (\"ShadowRoot\" in window && currentElement instanceof window.ShadowRoot) {\n                // Assume this is a ShadowRoot\n                return currentElement;\n            }\n            var parent_1 = getParent(currentElement);\n            if (parent_1 === currentElement) {\n                return document;\n            }\n            currentElement = parent_1;\n        }\n        return document;\n    }\n\n    /**\n     * Gets the origin of the given Location or HTMLAnchorElement if available in the runtime, and otherwise shims it. (it's a one-liner)\n     * @returns {string}\n     */\n    function getLocationOrigin(locationLike) {\n        if (locationLike === void 0) { locationLike = location; }\n        if (\"origin\" in locationLike && locationLike.origin != null) {\n            return locationLike.origin;\n        }\n        var port = locationLike.port != null && locationLike.port.length > 0 ? \":\" + locationLike.port : \"\";\n        if (locationLike.protocol === \"http:\" && port === \":80\") {\n            port = \"\";\n        }\n        else if (locationLike.protocol === \"https:\" && port === \":443\") {\n            port = \"\";\n        }\n        return locationLike.protocol + \"//\" + locationLike.hostname + port;\n    }\n\n    /**\n     * A Regular expression that matches id's of the form \"#[digit]\"\n     * @type {RegExp}\n     */\n    var ID_WITH_LEADING_DIGIT_REGEXP = /^#\\d/;\n    /**\n     * Catches anchor navigation to IDs within the same root and ensures that they can be smooth-scrolled\n     * if the scroll behavior is smooth in the first rooter within that context\n     */\n    function catchNavigation() {\n        // Listen for 'click' events globally\n        window.addEventListener(\"click\", function (e) {\n            // Only work with trusted events on HTMLAnchorElements\n            if (!e.isTrusted || !(e.target instanceof HTMLAnchorElement))\n                return;\n            var _a = e.target, pathname = _a.pathname, search = _a.search, hash = _a.hash;\n            var pointsToCurrentPage = getLocationOrigin(e.target) === getLocationOrigin(location) && pathname === location.pathname && search === location.search;\n            // Only work with HTMLAnchorElements that navigates to a specific ID on the current page\n            if (!pointsToCurrentPage || hash == null || hash.length < 1) {\n                return;\n            }\n            // Find the nearest root, whether it be a ShadowRoot or the document itself\n            var root = findNearestRoot(e.target);\n            // Attempt to match the selector from that root. querySelector' doesn't support IDs that start with a digit, so work around that limitation\n            var elementMatch = hash.match(ID_WITH_LEADING_DIGIT_REGEXP) != null ? root.getElementById(hash.slice(1)) : root.querySelector(hash);\n            // If no selector could be found, don't proceed\n            if (elementMatch == null)\n                return;\n            // Find the nearest ancestor that can be scrolled\n            var _b = __read(findNearestAncestorsWithScrollBehavior(elementMatch), 2), behavior = _b[1];\n            // If the behavior isn't smooth, don't proceed\n            if (behavior !== \"smooth\")\n                return;\n            // Otherwise, first prevent the default action.\n            e.preventDefault();\n            // Now, scroll to the element with that ID\n            elementMatch.scrollIntoView({\n                behavior: behavior\n            });\n        });\n    }\n\n    var ELEMENT_ORIGINAL_SCROLL_INTO_VIEW = UNSUPPORTED_ENVIRONMENT ? undefined : Element.prototype.scrollIntoView;\n\n    /**\n     * The majority of this file is based on https://github.com/stipsan/compute-scroll-into-view (MIT license),\n     * but has been rewritten to accept a scroller as an argument.\n     */\n    /**\n     * Find out which edge to align against when logical scroll position is \"nearest\"\n     * Interesting fact: \"nearest\" works similarly to \"if-needed\", if the element is fully visible it will not scroll it\n     *\n     * Legends:\n     * ââââââââââ â â â â â\n     * â target â   frame\n     * ââââââââââ â â â â â\n     */\n    function alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n        /**\n         * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n         *\n         *          ââââ\n         *        ââââââââ\n         *          â  â\n         *        â â  â â        do nothing\n         *          â  â\n         *        ââââââââ\n         *          ââââ\n         *\n         *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n         *\n         *    â â â â â â\n         *   âââââââââââââ\n         *   ââ         ââ        do nothing\n         *   âââââââââââââ\n         *    â â â â â â\n         */\n        if ((elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd) ||\n            (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)) {\n            return 0;\n        }\n        /**\n         * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n         *\n         *          ââââ\n         *        ââââââââ         ââââââââ\n         *          ââââ             â  â\n         *  from  â      â     to  â ââââ â\n         *\n         *        ââ ââ ââ         ââ ââ ââ\n         *\n         * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n         *\n         *        ââ ââ ââ         ââââââââ\n         *                           â  â\n         *  from  â ââââ â     to  â â  â â\n         *          â  â             â  â\n         *        ââââââââ         ââââââââ\n         *          â  â             ââââ\n         *          â  â\n         *          ââââ\n         *\n         * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n         *\n         *       from                 to\n         *    â â â â â â         â â â â â â\n         *  âââââ                 âââââ\n         *  â â â       â         â   â     â\n         *  âââââ                 âââââ\n         *    â â â â â â         â â â â â â\n         *\n         * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n         *\n         *       from                 to\n         *    â â â â â â         â â â â â â\n         *        âââââââââââââ   âââââââââââââ\n         *    â   â     â     â   â         â â\n         *        âââââââââââââ   âââââââââââââ\n         *    â â â â â â         â â â â â â\n         */\n        if ((elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n            (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)) {\n            return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n        }\n        /**\n         * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n         *\n         *        ââ ââ ââ         ââ ââ ââ\n         *\n         *  from  â      â     to  â ââââ â\n         *          ââââ             â  â\n         *        ââââââââ         ââââââââ\n         *          ââââ\n         *\n         * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n         *\n         *          ââââ\n         *          â  â\n         *          â  â             ââââ\n         *        ââââââââ         ââââââââ\n         *          â  â             â  â\n         *  from  â ââââ â     to  â â  â â\n         *                           â  â\n         *        ââ ââ ââ         ââââââââ\n         *\n         * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n         *\n         *           from                 to\n         *        â â â â â â         â â â â â â\n         *  âââââââââââââ           âââââââââââââ\n         *  â     â     â   â       â â         â\n         *  âââââââââââââ           âââââââââââââ\n         *        â â â â â â         â â â â â â\n         *\n         * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n         *\n         *           from                 to\n         *        â â â â â â         â â â â â â\n         *                âââââ             âââââ\n         *        â       â â â       â     â   â\n         *                âââââ             âââââ\n         *        â â â â â â         â â â â â â\n         *\n         */\n        if ((elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) || (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)) {\n            return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n        }\n        return 0;\n    }\n    function computeScrollIntoView(target, scroller, options) {\n        var block = options.block, inline = options.inline;\n        // Used to handle the top most element that can be scrolled\n        var scrollingElement = getScrollingElement();\n        // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n        // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n        // and viewport dimensions on window.innerWidth/Height\n        // https://www.quirksmode.org/mobile/viewports2.html\n        // https://bokand.github.io/viewport/index.html\n        var viewportWidth = window.visualViewport != null ? visualViewport.width : innerWidth;\n        var viewportHeight = window.visualViewport != null ? visualViewport.height : innerHeight;\n        var viewportX = window.scrollX != null ? window.scrollX : window.pageXOffset;\n        var viewportY = window.scrollY != null ? window.scrollY : window.pageYOffset;\n        var _a = target.getBoundingClientRect(), targetHeight = _a.height, targetWidth = _a.width, targetTop = _a.top, targetRight = _a.right, targetBottom = _a.bottom, targetLeft = _a.left;\n        // These values mutate as we loop through and generate scroll coordinates\n        var targetBlock = block === \"start\" || block === \"nearest\" ? targetTop : block === \"end\" ? targetBottom : targetTop + targetHeight / 2; // block === 'center\n        var targetInline = inline === \"center\" ? targetLeft + targetWidth / 2 : inline === \"end\" ? targetRight : targetLeft; // inline === 'start || inline === 'nearest\n        var _b = scroller.getBoundingClientRect(), height = _b.height, width = _b.width, top = _b.top, right = _b.right, bottom = _b.bottom, left = _b.left;\n        var frameStyle = getComputedStyle(scroller);\n        var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n        var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n        var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n        var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n        var blockScroll = 0;\n        var inlineScroll = 0;\n        // The property existance checks for offset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n        // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n        var scrollbarWidth = \"offsetWidth\" in scroller ? scroller.offsetWidth - scroller.clientWidth - borderLeft - borderRight : 0;\n        var scrollbarHeight = \"offsetHeight\" in scroller ? scroller.offsetHeight - scroller.clientHeight - borderTop - borderBottom : 0;\n        if (scrollingElement === scroller) {\n            // Handle viewport logic (document.documentElement or document.body)\n            if (block === \"start\") {\n                blockScroll = targetBlock;\n            }\n            else if (block === \"end\") {\n                blockScroll = targetBlock - viewportHeight;\n            }\n            else if (block === \"nearest\") {\n                blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n            }\n            else {\n                // block === 'center' is the default\n                blockScroll = targetBlock - viewportHeight / 2;\n            }\n            if (inline === \"start\") {\n                inlineScroll = targetInline;\n            }\n            else if (inline === \"center\") {\n                inlineScroll = targetInline - viewportWidth / 2;\n            }\n            else if (inline === \"end\") {\n                inlineScroll = targetInline - viewportWidth;\n            }\n            else {\n                // inline === 'nearest' is the default\n                inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n            }\n            // Apply scroll position offsets and ensure they are within bounds\n            // @TODO add more test cases to cover this 100%\n            blockScroll = Math.max(0, blockScroll + viewportY);\n            inlineScroll = Math.max(0, inlineScroll + viewportX);\n        }\n        else {\n            // Handle each scrolling frame that might exist between the target and the viewport\n            if (block === \"start\") {\n                blockScroll = targetBlock - top - borderTop;\n            }\n            else if (block === \"end\") {\n                blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n            }\n            else if (block === \"nearest\") {\n                blockScroll = alignNearest(top, bottom, height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n            }\n            else {\n                // block === 'center' is the default\n                blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2;\n            }\n            if (inline === \"start\") {\n                inlineScroll = targetInline - left - borderLeft;\n            }\n            else if (inline === \"center\") {\n                inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2;\n            }\n            else if (inline === \"end\") {\n                inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n            }\n            else {\n                // inline === 'nearest' is the default\n                inlineScroll = alignNearest(left, right, width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n            }\n            var scrollLeft = scroller.scrollLeft, scrollTop = scroller.scrollTop;\n            // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n            blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, scroller.scrollHeight - height + scrollbarHeight));\n            inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, scroller.scrollWidth - width + scrollbarWidth));\n        }\n        return {\n            top: blockScroll,\n            left: inlineScroll\n        };\n    }\n\n    /**\n     * Patches the 'scrollIntoView' method on the Element prototype\n     */\n    function patchElementScrollIntoView() {\n        Element.prototype.scrollIntoView = function (arg) {\n            var normalizedOptions = arg == null || arg === true\n                ? {\n                    block: \"start\",\n                    inline: \"nearest\"\n                }\n                : arg === false\n                    ? {\n                        block: \"end\",\n                        inline: \"nearest\"\n                    }\n                    : arg;\n            // Find the nearest ancestor that can be scrolled\n            var _a = __read(findNearestAncestorsWithScrollBehavior(this), 2), ancestorWithScroll = _a[0], ancestorWithScrollBehavior = _a[1];\n            var behavior = normalizedOptions.behavior != null ? normalizedOptions.behavior : ancestorWithScrollBehavior;\n            // If the behavior isn't smooth, simply invoke the original implementation and do no more\n            if (behavior !== \"smooth\") {\n                // Assert that 'scrollIntoView' is actually defined\n                if (ELEMENT_ORIGINAL_SCROLL_INTO_VIEW != null) {\n                    ELEMENT_ORIGINAL_SCROLL_INTO_VIEW.call(this, normalizedOptions);\n                }\n                // Otherwise, invoke 'scrollTo' instead and provide the scroll coordinates\n                else {\n                    var _b = computeScrollIntoView(this, ancestorWithScroll, normalizedOptions), top_1 = _b.top, left = _b.left;\n                    getOriginalScrollMethodForKind(\"scrollTo\", this).call(this, left, top_1);\n                }\n                return;\n            }\n            ancestorWithScroll.scrollTo(__assign({ behavior: behavior }, computeScrollIntoView(this, ancestorWithScroll, normalizedOptions)));\n        };\n        // On IE11, HTMLElement has its own declaration of scrollIntoView and does not inherit this from the prototype chain, so we'll need to patch that one too.\n        if (HTMLElement.prototype.scrollIntoView != null && HTMLElement.prototype.scrollIntoView !== Element.prototype.scrollIntoView) {\n            HTMLElement.prototype.scrollIntoView = Element.prototype.scrollIntoView;\n        }\n    }\n\n    var ELEMENT_ORIGINAL_SCROLL_TOP_SET_DESCRIPTOR = UNSUPPORTED_ENVIRONMENT\n        ? undefined\n        : Object.getOwnPropertyDescriptor(Element.prototype, \"scrollTop\").set;\n\n    /**\n     * Patches the 'scrollTop' property descriptor on the Element prototype\n     */\n    function patchElementScrollTop() {\n        Object.defineProperty(Element.prototype, \"scrollTop\", {\n            set: function (scrollTop) {\n                if (this.__adjustingScrollPosition) {\n                    return ELEMENT_ORIGINAL_SCROLL_TOP_SET_DESCRIPTOR.call(this, scrollTop);\n                }\n                handleScrollMethod(this, \"scrollTo\", this.scrollLeft, scrollTop);\n                return scrollTop;\n            }\n        });\n    }\n\n    var ELEMENT_ORIGINAL_SCROLL_LEFT_SET_DESCRIPTOR = UNSUPPORTED_ENVIRONMENT\n        ? undefined\n        : Object.getOwnPropertyDescriptor(Element.prototype, \"scrollLeft\").set;\n\n    /**\n     * Patches the 'scrollLeft' property descriptor on the Element prototype\n     */\n    function patchElementScrollLeft() {\n        Object.defineProperty(Element.prototype, \"scrollLeft\", {\n            set: function (scrollLeft) {\n                if (this.__adjustingScrollPosition) {\n                    return ELEMENT_ORIGINAL_SCROLL_LEFT_SET_DESCRIPTOR.call(this, scrollLeft);\n                }\n                handleScrollMethod(this, \"scrollTo\", scrollLeft, this.scrollTop);\n                return scrollLeft;\n            }\n        });\n    }\n\n    /**\n     * Applies the polyfill\n     */\n    function patch() {\n        // Element.prototype methods\n        patchElementScroll();\n        patchElementScrollBy();\n        patchElementScrollTo();\n        patchElementScrollIntoView();\n        // Element.prototype descriptors\n        patchElementScrollLeft();\n        patchElementScrollTop();\n        // window methods\n        patchWindowScroll();\n        patchWindowScrollBy();\n        patchWindowScrollTo();\n        // Navigation\n        catchNavigation();\n    }\n\n    /**\n     * Is true if the browser natively supports the Element.prototype.[scroll|scrollTo|scrollBy|scrollIntoView] methods\n     * @type {boolean}\n     */\n    var SUPPORTS_ELEMENT_PROTOTYPE_SCROLL_METHODS = UNSUPPORTED_ENVIRONMENT\n        ? false\n        : \"scroll\" in Element.prototype && \"scrollTo\" in Element.prototype && \"scrollBy\" in Element.prototype && \"scrollIntoView\" in Element.prototype;\n\n    if (!UNSUPPORTED_ENVIRONMENT && (!SUPPORTS_SCROLL_BEHAVIOR || !SUPPORTS_ELEMENT_PROTOTYPE_SCROLL_METHODS)) {\n        patch();\n    }\n\n}());\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/scroll-behavior-polyfill/dist/index.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ })

}]);